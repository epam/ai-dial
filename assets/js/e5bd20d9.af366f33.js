"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[6436],{6534:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>i,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var s=n(5893),o=n(1151);const r={},i="Programmatic Auth",a={id:"Auth/programmatic-auth",title:"Programmatic Auth",description:"We use API keys for server-to-server interaction with AI DIAL API.",source:"@site/docs/Auth/3. programmatic-auth.md",sourceDirName:"Auth",slug:"/Auth/programmatic-auth",permalink:"/Auth/programmatic-auth",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"Overview",permalink:"/Auth/overview"},next:{title:"Overview",permalink:"/Auth/Web/overview"}},c={},l=[{value:"Step 1: Define API Keys",id:"step-1-define-api-keys",level:3},{value:"Step 2: Assign Roles",id:"step-2-assign-roles",level:3}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h3:"h3",p:"p",pre:"pre",strong:"strong",...(0,o.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"programmatic-auth",children:"Programmatic Auth"}),"\n",(0,s.jsx)(t.p,{children:"We use API keys for server-to-server interaction with AI DIAL API."}),"\n",(0,s.jsx)(t.p,{children:"To use an API key, it is necessary to create one."}),"\n",(0,s.jsx)(t.h3,{id:"step-1-define-api-keys",children:"Step 1: Define API Keys"}),"\n",(0,s.jsxs)(t.p,{children:["In the ",(0,s.jsx)(t.code,{children:"keys"})," section in the ",(0,s.jsx)(t.code,{children:"aidial.config.json"})," configuration file, you can add API keys. An API Key should be a secure random key of at least 128 bit size."]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["In ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"settings"}),", you can get familiar with the description of the configuration parameters. Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core/blob/development/sample/aidial.config.json#L181",children:"configuration file"})," to view the full example."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["In the following example, ",(0,s.jsx)(t.code,{children:'"myApiKey"'})," API key is created for a project ",(0,s.jsx)(t.code,{children:'"MyProject"'})," with the ",(0,s.jsx)(t.code,{children:'"default"'})," role:"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-json",children:'//Example extract from aidial.config.json\n"keys": {\n    "myApiKey": {\n        "project": "MyProject",\n        "role": "default"\n    }\n}\n'})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Important:"})," API keys must be associated with a project and role; otherwise a key is invalid."]}),"\n",(0,s.jsx)(t.h3,{id:"step-2-assign-roles",children:"Step 2: Assign Roles"}),"\n",(0,s.jsx)(t.p,{children:"API keys must be associated with roles. Such roles are used to manage access to system resources and restrict the number of requests that can be sent to them."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"/Roles%20and%20Access%20Control/overview",children:"Roles"})," to learn more how to use roles."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Roles used by API keys must be declared in the ",(0,s.jsx)(t.code,{children:"roles"})," section."]}),"\n",(0,s.jsxs)(t.p,{children:["In the previous example, we assigned the ",(0,s.jsx)(t.code,{children:"default"})," role for ",(0,s.jsx)(t.code,{children:"myApiKey"})," API key. On this step, we need to declare the ",(0,s.jsx)(t.code,{children:"default"})," role in the ",(0,s.jsx)(t.code,{children:"roles"})," section to make a valid configuration."]}),"\n",(0,s.jsxs)(t.p,{children:["Optionally, we can configure limits for this role, or leave them empty to apply an unlimited access. In this example, we grant an unlimited access for the ",(0,s.jsx)(t.code,{children:"default"})," role to the ",(0,s.jsx)(t.code,{children:"chat-gpt-35-turbo"})," model. You can refer to ",(0,s.jsx)(t.a,{href:"/Roles%20and%20Access%20Control/API%20Keys",children:"Roles & Access Control"})," to learn how to define access limits for API keys."]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"Note"}),", that it is mandatory to define at least one role and assign it for an API key, but you can leave ",(0,s.jsx)(t.code,{children:"limits"})," empty (as shown in the previous example) to apply the default value - ",(0,s.jsx)(t.code,{children:"unlimited"}),"."]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core/blob/development/sample/aidial.config.json",children:"configuration file"})," to view the full example."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-Json",children:'//Example extract from aidial.config.json\n"keys": {\n    "myApiKey": {\n        "project": "MyProject",\n        "role": "default"\n    }\n},\n"roles": {\n    "default": { //role name\n        "limits": {\n            "chat-gpt-35-turbo": //system resource\n            {}\n        }\n    }\n}\n'})})]})}function h(e={}){const{wrapper:t}={...(0,o.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},1151:(e,t,n)=>{n.d(t,{Z:()=>a,a:()=>i});var s=n(7294);const o={},r=s.createContext(o);function i(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);