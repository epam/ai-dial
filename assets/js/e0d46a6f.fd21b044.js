"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[9325],{49735:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>c});var n=i(85893),t=i(11151);const s={},o="DIAL as Application Server",r={id:"platform/architecture-and-concepts/app-server",title:"DIAL as Application Server",description:"Introduction",source:"@site/docs/platform/0.architecture-and-concepts/5.app-server.md",sourceDirName:"platform/0.architecture-and-concepts",slug:"/platform/architecture-and-concepts/app-server",permalink:"/platform/architecture-and-concepts/app-server",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"DIAL as Agentic Platform",permalink:"/platform/architecture-and-concepts/agentic-platform"},next:{title:"Introduction to DIAL Technological Stack",permalink:"/platform/architecture-and-concepts/stack"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Why use DIAL?",id:"why-use-dial",level:5},{value:"Develop",id:"develop",level:2},{value:"Host and Deploy",id:"host-and-deploy",level:2},{value:"Quick apps, Code apps and Mind Maps",id:"quick-apps-code-apps-and-mind-maps",level:5},{value:"Apps hosted and deployed outside DIAL",id:"apps-hosted-and-deployed-outside-dial",level:5},{value:"Test and Evaluate",id:"test-and-evaluate",level:2},{value:"Release",id:"release",level:2},{value:"Sharing",id:"sharing",level:5},{value:"Publishing",id:"publishing",level:5},{value:"Operate",id:"operate",level:2},{value:"Access and Management",id:"access-and-management",level:3},{value:"Monitoring",id:"monitoring",level:3},{value:"Evaluation",id:"evaluation",level:3},{value:"Auto-Scaling",id:"auto-scaling",level:3}];function d(e){const a={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",h3:"h3",h5:"h5",li:"li",p:"p",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.h1,{id:"dial-as-application-server",children:"DIAL as Application Server"}),"\n",(0,n.jsx)(a.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsx)(a.p,{children:"DIAL can act as an application server facilitating the development, hosting, deployment, and management of GenAI applications."}),"\n",(0,n.jsx)(a.h5,{id:"why-use-dial",children:"Why use DIAL?"}),"\n",(0,n.jsx)(a.p,{children:"DIAL provides developers with a comprehensive environment for creating GenAI applications, along with robust middleware and tools to manage applications at every stage of their lifecycle. By leveraging the DIAL technology, you can focus on innovation and core functionality without the need to reinvent the wheel."}),"\n",(0,n.jsx)(a.h2,{id:"develop",children:"Develop"}),"\n",(0,n.jsx)(a.p,{children:"The DIAL platform can be used as a development studio to create GenAI applications. Developers can choose between two primary approaches:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Developing from scratch"}),": You can develop an application yourself from ground up. DIAL includes ",(0,n.jsx)(a.a,{href:"https://github.com/epam/ai-dial-sdk",children:"SDK"})," and a unified ",(0,n.jsx)(a.a,{href:"https://dialx.ai/dial_api",children:"API"})," to streamline this process. When developing apps, you can use a technology of your preference, be it any LLM framework, LlamaIndex, LangChain, Semantic Kernel, vector DBs or any other. Apps created with DIAL API and SDK are fully compatible with the unified protocol of DIAL, which enables calling them by other applications as ",(0,n.jsx)(a.a,{href:"/platform/architecture-and-concepts/agentic-platform",children:"agents"})," (building blocks) in a custom multi-agent workflow."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Using predefined application templates"}),": DIAL includes predefined templates, known as ",(0,n.jsx)(a.a,{href:"/platform/core/apps#application-types",children:"Application Types"}),", to simplify the creation of specific types of applications. These templates include ",(0,n.jsx)(a.a,{href:"/platform/core/apps#quick-apps",children:"Quick Apps"}),", ",(0,n.jsx)(a.a,{href:"/platform/core/apps#code-apps",children:"Code Apps"}),", and ",(0,n.jsx)(a.a,{href:"/platform/core/apps#mind-maps",children:"Mind Maps"}),". Application types are ",(0,n.jsx)(a.a,{href:"/platform/core/apps#schema-rich-applications",children:"based on schemas"})," that define the structure of an application, including application's UI and editor. Additionally, DIAL allows developers to create custom application types, enabling end-users to add specialized apps using no-code editors on UI. Custom application types can support a wide variety of logic, custom UI designs (including non-conversational interfaces), and tailored UI wizards."]}),"\n"]}),"\n",(0,n.jsx)(a.p,{children:"The platform also includes a rich set of tools and features to support the development of powerful, multi-agent applications:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:(0,n.jsx)(a.a,{href:"https://dialx.ai/dial_api",children:"API"})}),": DIAL follows an API-First approach, providing access to all its features via the ",(0,n.jsx)(a.a,{href:"https://dialx.ai/dial_api",children:"Unified API"}),"."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:(0,n.jsx)(a.a,{href:"https://github.com/epam/ai-dial-sdk",children:"SDK"})}),": A framework for creating ",(0,n.jsx)(a.a,{href:"/platform/core/apps",children:"applications"})," and ",(0,n.jsx)(a.a,{href:"/platform/architecture-and-concepts/components#llm-adapters",children:"model adapters"})," for DIAL. Applications and model adapters implemented using this framework are fully compatible with DIAL API, which is based on the Azure OpenAI API."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:(0,n.jsx)(a.a,{href:"/platform/core/about-core#unified-api",children:"Unified Protocol"})}),": The DIAL Core unified protocol is fully compatible with the OpenAI API, making it easier to develop and integrate new applications. This single, standardized protocol is used for all applications and models deployed within DIAL. It supports a wide range of features, including MCP server calling, tool calling, streaming, seeds, multi-modality, and more."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:(0,n.jsx)(a.a,{href:"/platform/architecture-and-concepts/agentic-platform#introduction",children:"Agents"})}),": You can use ",(0,n.jsx)(a.a,{href:"https://dialx.ai/dial_api",children:"DIAL Unified API"})," to call any other deployed ",(0,n.jsx)(a.a,{href:"/platform/architecture-and-concepts/agentic-platform#types-of-agents",children:"agent"})," (yours or created by other users based on your permissions) directly from your application's code. Similarly, you can allow others to use your apps as agents, promoting reusability and enabling the creation of multi-agent workflows."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Application Runners"}),": DIAL supports the concept of application runners which process parameters of specific application types. Refer to ",(0,n.jsx)(a.a,{href:"/platform/core/apps#schema-rich-applications",children:"Schema-Rich Applications"})," for more details."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Experimentation and Prototyping"}),": Application Runners enable users to quickly ",(0,n.jsx)(a.a,{href:"/tutorials/user-guide#application-builder",children:"prototype"})," apps in no-code editors and test them before deployment. ",(0,n.jsx)(a.a,{href:"/platform/core/apps#code-apps",children:"Code apps"})," enable power users to write and execute custom Python code directly within the DIAL Chat application and deploy it on the platform's infrastructure in a few clicks. Once ready, applications can be published on the ",(0,n.jsx)(a.a,{href:"/platform/chat/marketplace",children:"Marketplace"})," or ",(0,n.jsx)(a.a,{href:"/platform/collaboration-intro#sharing",children:"shared"})," with specific users."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Middleware"}),": DIAL provides a robust middleware available out of the box to create powerful apps, enabling you to focus on your core business needs without having to reinvent the wheel. The middleware includes:","\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"/platform/supported-models",children:"Language models"}),": DIAL supports connectivity with leading LLM vendors, allowing you to configure the system to match your preferences. You can also integrate language models from the open-source community, alternative vendors, fine-tuned micro models, self-hosted models, or those listed on platforms like HuggingFace or DeepSeek."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"/platform/core/interceptors",children:"Interceptors"}),": Interceptors let you add custom logic to incoming and outgoing requests for models and applications. This enables functionality such as PII obfuscation, guardrails, safety checks, and more."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"/platform/core/access-control-intro",children:"RBAC"}),": DIAL integrates with various identity providers (IDPs), allowing you to implement and support a custom RBAC system tailored to your organizational needs."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"https://github.com/epam/ai-dial-core/blob/development/docs/dynamic-settings/roles.md#rolesrole_namelimits",children:"Rate Limit"}),": DIAL allows you to define flexible usage and cost limits for ",(0,n.jsx)(a.a,{href:"/tutorials/devops/auth-and-access-control/jwt",children:"JWT"})," and ",(0,n.jsx)(a.a,{href:"/tutorials/devops/auth-and-access-control/api-keys",children:"API keys"}),", giving you control over the usage of your applications and models."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"/platform/core/load-balancer",children:"Load balancer"}),": DIAL includes a powerful load balancer with PTU (Processing Time Units) support, enabling efficient distribution of requests to LLMs across various resources. This helps prevent bottlenecks, improves fault tolerance, and optimizes costs."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"/platform/observability-intro",children:"Observability"}),": With tools powered by OpenTelemetry, DIAL provides insights into your system's performance and health, helping you monitor and optimize your applications."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.a,{href:"/video%20demos/Developers/Applications/dial-rag-eval",children:"Evaluation toolkit"}),": A suite of tools designed to evaluate the retrieval and generation capabilities of RAG-like (Retrieval-Augmented Generation) applications."]}),"\n",(0,n.jsx)(a.li,{children:"Additional Tools: DIAL also includes tools for collecting and visualizing usage analytics, managing logs, debugging applications, and more."}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Real-time Co-development"}),": DIAL supports real-time collaboration during application development. By granting ",(0,n.jsx)(a.a,{href:"/tutorials/user-guide#sharing-with-editing-rights",children:"WRITE permissions"}),", you can enable other users to work on the same application simultaneously, streamlining teamwork and accelerating development."]}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"host-and-deploy",children:"Host and Deploy"}),"\n",(0,n.jsx)(a.h5,{id:"quick-apps-code-apps-and-mind-maps",children:"Quick apps, Code apps and Mind Maps"}),"\n",(0,n.jsxs)(a.p,{children:["Applications of standard types (e.g. ",(0,n.jsx)(a.a,{href:"/platform/core/apps#quick-apps",children:"Quick Apps"}),", ",(0,n.jsx)(a.a,{href:"/platform/core/apps#code-apps",children:"Code Apps"}),", and ",(0,n.jsx)(a.a,{href:"/platform/core/apps#mind-maps",children:"Mind Maps"}),") are automatically hosted and deployed on the DIAL infrastructure. This eliminates the need for developers to manage tasks like hosting, scaling, file storage, and application management, as these are handled seamlessly by DIAL."]}),"\n",(0,n.jsx)(a.h5,{id:"apps-hosted-and-deployed-outside-dial",children:"Apps hosted and deployed outside DIAL"}),"\n",(0,n.jsxs)(a.p,{children:["DIAL also enables the usage of applications that are deployed and hosted outside its infrastructure. These external applications can be enabled through the DIAL API, the DIAL Chat UI wizards, direct modifications to the DIAL Core configuration, or via the ",(0,n.jsx)(a.a,{href:"/tutorials/admin/entities-applications",children:"DIAL Admin"}),"."]}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:["Refer to ",(0,n.jsx)(a.a,{href:"/tutorials/developers/apps-development/enable-app",children:"Tutorials for Developers"})," to learn more."]}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"test-and-evaluate",children:"Test and Evaluate"}),"\n",(0,n.jsx)(a.p,{children:"DIAL provides a range of tools to help developers test, experiment, and evaluate applications before they are released. These tools ensure that applications meet quality standards and perform as expected. Key features include:"}),"\n",(0,n.jsxs)(a.ul,{children:["\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Evaluation toolkit"}),": DIAL offers a dedicated UI and ",(0,n.jsx)(a.a,{href:"https://github.com/epam/ai-dial-rag-eval",children:"library to calculate metrics"})," and evaluate the quality of information retrieval and generation for RAG-like (Retrieval-Augmented Generation) applications. Watch a ",(0,n.jsx)(a.a,{href:"/video%20demos/Developers/Applications/dial-rag-eval",children:"demo video"}),"."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Access to application logs"}),": You can use the ",(0,n.jsx)(a.a,{href:"https://dialx.ai/dial_api#tag/Applications/operation/getApplicationLogs",children:"DIAL API"})," and ",(0,n.jsx)(a.a,{href:"/tutorials/user-guide#to-access-code-app-logs",children:"DIAL Chat UI"})," to access and review logs for Code Apps, enabling efficient debugging and monitoring."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Observability and troubleshooting"}),": DIAL leverages ",(0,n.jsx)(a.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry (OTEL)"})," to enable system monitoring. A comprehensive metrics and tracing capabilities help identify bottlenecks, analyze health and performance, visualize metrics in tools like Grafana and PowerBI. Refer to ",(0,n.jsx)(a.a,{href:"/tutorials/devops/observability-config",children:"Observability"})," for more details."]}),"\n",(0,n.jsxs)(a.li,{children:[(0,n.jsx)(a.strong,{children:"Usage analytics"}),": DIAL includes a specialized service called DIAL Analytics Realtime, which leverages techniques such as embedding algorithms, clustering, and lightweight self-hosted language models to analyze chat completion logs. The extracted insights can be visualized in tools like Grafana, providing actionable analytics for optimization. Refer to ",(0,n.jsx)(a.a,{href:"/platform/realtime-analytics-intro",children:"Analytics"})," for more details."]}),"\n"]}),"\n",(0,n.jsx)(a.h2,{id:"release",children:"Release"}),"\n",(0,n.jsxs)(a.p,{children:["Before an application is released, it is accessible only to you as its creator. Once published, system administrators can access and manage the application through the ",(0,n.jsx)(a.a,{href:"https://dialx.ai/dial_api",children:"API"}),", ",(0,n.jsx)(a.a,{href:"/tutorials/admin/home",children:"DIAL Admin Panel"})," or ",(0,n.jsx)(a.a,{href:"/tutorials/user-guide#administrators",children:"DIAL Chat Admin"})," space."]}),"\n",(0,n.jsxs)(a.p,{children:["Once your application is ready to be released, you can ",(0,n.jsx)(a.a,{href:"/tutorials/developers/work-with-resources/sharing",children:"share"})," it with specific users or ",(0,n.jsx)(a.a,{href:"/tutorials/developers/work-with-resources/work-with-publications",children:"publish"})," it on the ",(0,n.jsx)(a.a,{href:"/platform/chat/marketplace",children:"DIAL Marketplace"})," to make it available to a broader audience."]}),"\n",(0,n.jsx)(a.h5,{id:"sharing",children:"Sharing"}),"\n",(0,n.jsxs)(a.p,{children:["Sharing allows you to grant READ or WRITE access to specific users. You can share applications via the ",(0,n.jsx)(a.a,{href:"/tutorials/user-guide#share-app",children:"DIAL Chat UI"})," and ",(0,n.jsx)(a.a,{href:"https://dialx.ai/dial_api#tag/Sharing",children:"API"}),", and you can revoke access at any time. Additionally, you can grant permissions to allow users to re-share the application with others."]}),"\n",(0,n.jsx)(a.h5,{id:"publishing",children:"Publishing"}),"\n",(0,n.jsxs)(a.p,{children:["Publishing makes your application available on the ",(0,n.jsx)(a.a,{href:"/platform/chat/marketplace",children:"DIAL Marketplace"}),", where it can be accessed by users with specific roles or by all users, depending on the rules defined in your publication request. Published applications are accessible through the Marketplace, DIAL Chat, and the API. Publishing requires approval from a platform administrator, and you can revoke access to a published application at any time after it has been approved."]}),"\n",(0,n.jsx)(a.h2,{id:"operate",children:"Operate"}),"\n",(0,n.jsx)(a.p,{children:"DIAL provides a comprehensive set of tools for application owners to access, manage, monitor, and optimize their applications throughout the entire lifecycle."}),"\n",(0,n.jsx)(a.h3,{id:"access-and-management",children:"Access and Management"}),"\n",(0,n.jsxs)(a.p,{children:["Users can access and manage their applications though the ",(0,n.jsx)(a.a,{href:"/tutorials/user-guide#my-workspace",children:"DIAL Chat Workspace"})," or ",(0,n.jsx)(a.a,{href:"https://dialx.ai/dial_api",children:"API"}),". These interfaces allow users to perform a variety of actions, including editing applications, revoking usage, collaborating with others, and managing application settings."]}),"\n",(0,n.jsx)(a.h3,{id:"monitoring",children:"Monitoring"}),"\n",(0,n.jsx)(a.p,{children:"DIAL offers robust monitoring capabilities to help developers and administrators analyze application performance and usage patterns:"}),"\n",(0,n.jsxs)(a.p,{children:["The ",(0,n.jsx)(a.a,{href:"/platform/realtime-analytics-intro",children:"Analytics Realtime"})," component enables the analysis of chat completion logs and extracts actionable insights. These insights may include any calculated statistics such as user activity, usage patterns, conversation topics, or sentiment analysis and can be visualized using tools like Grafana and PowerBI."]}),"\n",(0,n.jsxs)(a.p,{children:["You can use ",(0,n.jsx)(a.a,{href:"https://dialx.ai/dial_api#tag/Applications/operation/getApplicationLogs",children:"DIAL API"})," and ",(0,n.jsx)(a.a,{href:"/tutorials/user-guide#to-access-code-app-logs",children:"DIAL Chat UI"})," to view logs of Code apps, aiding in debugging and monitoring."]}),"\n",(0,n.jsxs)(a.p,{children:["Administrators can view both real-time and historical metrics for applications. They can monitor usage patterns, enforce SLAs, optimize costs, and troubleshoot anomalies via the ",(0,n.jsx)(a.a,{href:"/tutorials/admin/entities-applications#audit",children:"DIAL Admin Panel"}),"."]}),"\n",(0,n.jsx)(a.h3,{id:"evaluation",children:"Evaluation"}),"\n",(0,n.jsx)(a.p,{children:"To optimize application performance, developers can use the Evaluation Toolkit to fine-tune retrieval and generation behaviors. This toolkit allows for the comparison of application outputs against ground truth data, as well as the calculation of evaluation metrics."}),"\n",(0,n.jsxs)(a.blockquote,{children:["\n",(0,n.jsxs)(a.p,{children:["Watch a ",(0,n.jsx)(a.a,{href:"/video%20demos/Developers/Applications/dial-rag-eval",children:"demo video"}),"."]}),"\n"]}),"\n",(0,n.jsx)(a.h3,{id:"auto-scaling",children:"Auto-Scaling"}),"\n",(0,n.jsx)(a.p,{children:"DIAL provides automatic scaling for Code Apps, dynamically adjusting resources based on real-time workload demands. This ensures optimal performance and cost efficiency, even during periods of high usage."})]})}function p(e={}){const{wrapper:a}={...(0,t.a)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},11151:(e,a,i)=>{i.d(a,{Z:()=>r,a:()=>o});var n=i(67294);const t={},s=n.createContext(t);function o(e){const a=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function r(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(s.Provider,{value:a},e.children)}}}]);