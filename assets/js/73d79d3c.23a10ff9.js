"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[805],{47535:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>d});var t=o(85893),r=o(11151);const i={},s="DIAL-to-DIAL Adapter",a={id:"tutorials/developers/apps-development/adapter-dial",title:"DIAL-to-DIAL Adapter",description:"Introduction",source:"@site/docs/tutorials/1.developers/4.apps-development/0.adapter-dial.md",sourceDirName:"tutorials/1.developers/4.apps-development",slug:"/tutorials/developers/apps-development/adapter-dial",permalink:"/tutorials/developers/apps-development/adapter-dial",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"AI DIAL Chat Design Structure Guidelines",permalink:"/tutorials/developers/chat/chat-design"},next:{title:"How to Enable Apps in DIAL",permalink:"/tutorials/developers/apps-development/enable-app"}},l={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Prerequisites",id:"prerequisites",level:3},{value:"Configuration Steps",id:"configuration-steps",level:3}];function c(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"dial-to-dial-adapter",children:"DIAL-to-DIAL Adapter"}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"When developing DIAL applications or working with a local deployment of DIAL, this DIAL-to-DIAL adapter simplifies the process by eliminating the need to manually request, deploy, or configure LLM models. It facilitates communication between two instances of DIAL Core, allowing you to access and utilize any model available in a remote DIAL Core within the scope of your API key."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Refer to ",(0,t.jsx)(n.a,{href:"https://github.com/epam/ai-dial-adapter-dial",children:"DIAL Adapter repository"})," to learn how to configure and run this adapter."]}),"\n"]}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Refer to ",(0,t.jsx)(n.a,{href:"https://github.com/epam/ai-dial-core",children:"DIAL Core"})," to view all the configuration parameters."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,t.jsx)(n.p,{children:"In this section, you can learn how to configure a local DIAL Core Adapter."}),"\n",(0,t.jsx)(n.h3,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsx)(n.li,{children:"Ensure that you have a URL for a remote DIAL Core where models are already configured. Example: core.your-company.com"}),"\n",(0,t.jsx)(n.li,{children:'Make sure you possess an API key for the remote DIAL Core. Example: "YourAPIKeyForRemoteCore"'}),"\n"]}),"\n",(0,t.jsx)(n.h3,{id:"configuration-steps",children:"Configuration Steps"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["In the ",(0,t.jsx)(n.a,{href:"https://github.com/epam/ai-dial-adapter-dial/tree/development/docker-compose/local",children:"DIAL Adapter repository"})," you can find additional information and source files."]}),"\n"]}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Access to the remote DIAL Core server is determined by the environment variables ",(0,t.jsx)(n.code,{children:"$REMOTE_DIAL_URL"})," and ",(0,t.jsx)(n.code,{children:"$REMOTE_DIAL_API_KEY"}),"."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Run the following command to generate a ",(0,t.jsx)(n.strong,{children:"local"})," version of the remote DIAL Core configuration file ",(0,t.jsx)(n.code,{children:"core/config.json"}),"."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:'REMOTE_DIAL_URL="url" REMOTE_DIAL_API_KEY="key" ./generate_config_from_listing.sh\n'})}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsxs)(n.p,{children:["Modify the generated ",(0,t.jsx)(n.code,{children:"core/config.json"})," as you see fit. For example, you might want to add models and applications hosted by the remote DIAL server, or configure locally-hosted applications."]}),"\n"]}),"\n",(0,t.jsxs)(n.li,{children:["\n",(0,t.jsx)(n.p,{children:"Run your local DIAL."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-bash",children:"docker compose up --abort-on-container-exit\n"})}),"\n"]}),"\n"]})]})}function p(e={}){const{wrapper:n}={...(0,r.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},11151:(e,n,o)=>{o.d(n,{Z:()=>a,a:()=>s});var t=o(67294);const r={},i=t.createContext(r);function s(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);