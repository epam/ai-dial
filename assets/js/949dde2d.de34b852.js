"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[3445],{6630:(n,e,t)=>{t.r(e),t.d(e,{assets:()=>s,contentTitle:()=>p,default:()=>c,frontMatter:()=>o,metadata:()=>a,toc:()=>l});var i=t(5893),r=t(1151);const o={},p="Quick Apps Installation Instructions",a={id:"tutorials/devops/deployment/quick_apps_deployment",title:"Quick Apps Installation Instructions",description:"Introduction",source:"@site/docs/tutorials/2.devops/0.deployment/3.quick_apps_deployment.md",sourceDirName:"tutorials/2.devops/0.deployment",slug:"/tutorials/devops/deployment/quick_apps_deployment",permalink:"/tutorials/devops/deployment/quick_apps_deployment",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"Custom Apps Deployment",permalink:"/tutorials/devops/deployment/custom_apps_deployment"},next:{title:"Using Secrets from Azure Key Vault in Helm Values",permalink:"/tutorials/devops/deployment/azure-secrets"}},s={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Prerequisites",id:"prerequisites",level:5},{value:"Step 1: Update Components",id:"step-1-update-components",level:2},{value:"Step 2: Deploy Quick Apps with Helm",id:"step-2-deploy-quick-apps-with-helm",level:2},{value:"Example of a values.yaml file",id:"example-of-a-valuesyaml-file",level:5},{value:"Step 3: Configure DIAL Core",id:"step-3-configure-dial-core",level:2},{value:"Step 4: DIAL Chat Environment Variables",id:"step-4-dial-chat-environment-variables",level:2},{value:"Step 5: DIAL Core Environment Variables",id:"step-5-dial-core-environment-variables",level:2},{value:"Annex",id:"annex",level:2},{value:"Quick Apps Schema",id:"quick-apps-schema",level:5}];function d(n){const e={a:"a",code:"code",h1:"h1",h2:"h2",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",ul:"ul",...(0,r.a)(),...n.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.h1,{id:"quick-apps-installation-instructions",children:"Quick Apps Installation Instructions"}),"\n",(0,i.jsx)(e.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsx)(e.p,{children:"Install the Quick Apps component to be able to use Quick Apps in your deployment of DIAL. Follow this guide to do this."}),"\n",(0,i.jsx)(e.h5,{id:"prerequisites",children:"Prerequisites"}),"\n",(0,i.jsx)(e.p,{children:"Ensure that you have the necessary permissions to deploy and configure Helm charts and services within the Kubernetes cluster."}),"\n",(0,i.jsx)(e.h2,{id:"step-1-update-components",children:"Step 1: Update Components"}),"\n",(0,i.jsx)(e.p,{children:"Make sure the following components are updated to the specified versions:"}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://github.com/epam/ai-dial-core",children:"DIAL Core"})," to version 0.28.0 or higher."]}),"\n",(0,i.jsxs)(e.li,{children:[(0,i.jsx)(e.a,{href:"https://github.com/epam/ai-dial-chat",children:"DIAL Chat"})," to version 0.29.0."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"step-2-deploy-quick-apps-with-helm",children:"Step 2: Deploy Quick Apps with Helm"}),"\n",(0,i.jsx)(e.p,{children:"Run the following Helm command to deploy Quick Apps:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-bash",children:"helm upgrade --install dial-quickapps dial/dial-extension -f ./values.yaml -n dial\n"})}),"\n",(0,i.jsx)(e.h5,{id:"example-of-a-valuesyaml-file",children:"Example of a values.yaml file"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:'# This section is provided as an example. Please use the actual image.\nimage:\n  pullPolicy: Always\n  registry: registry.deltixhub.com\n  repository: ai/dial/application/quickapps\n  tag: development\n  pullSecrets:\n    - dial-dev-registry\n\npodAnnotations:\n  autorestart: \'{{ dateInZone "2006-01-02 15:04:05Z" (now) "UTC" }}\'\n\n  fullnameOverride: quickapps\n\ningress:\n  enabled: false\n\nserviceAccount:\n  create: true\n\nenv:\n  DIAL_URL: "http://dial-core.dial.svc.cluster.local"\n  API_VERSION: "2025-01-01-preview"\n  TEMPERATURE_FALLBACK: "true"\n  SYSTEM_PROMPT_FALLBACK: "true"\n\n# API_VERSION sets a unified protocol version used to call models and other apps from quick app executor\n# You can omit API_VERSION than default value "2025-01-01-preview" will be applied\n# TEMPERATURE_FALLBACK - if true, quckapp will not set temperature in the request to the model, if model does not support it\n# SYSTEM_PROMPT_FALLBACK - if true, quckapp will append instructions to every human message, if model does not support system prompt\n# You also can set RAG_DEPLOYMENT_NAME if you want to modify the "default" RAG to be used ("dial-rag" if not set)\n\n'})}),"\n",(0,i.jsx)(e.h2,{id:"step-3-configure-dial-core",children:"Step 3: Configure DIAL Core"}),"\n",(0,i.jsx)(e.p,{children:"After deploying Quick Apps, configure DIAL Core to use the Quick Apps component. To do this:"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["Add the ",(0,i.jsx)(e.a,{href:"#quick-apps-schema",children:"Quick Apps application type JSON schema"})," to the DIAL Core configuration."]}),"\n",(0,i.jsxs)(e.li,{children:["Update ",(0,i.jsx)(e.code,{children:'"dial:applicationTypeCompletionEndpoint"'})," and ",(0,i.jsx)(e.code,{children:'"dial:applicationTypeConfigurationEndpoint"'})," with the Quick Apps service endpoints created in ",(0,i.jsx)(e.a,{href:"#step-2-deploy-quick-apps-with-helm",children:"Step 2"}),"."]}),"\n"]}),"\n",(0,i.jsxs)(e.ul,{children:["\n",(0,i.jsxs)(e.li,{children:["If ",(0,i.jsx)(e.code,{children:'"dial:appendApplicationPropertiesHeader": true'}),", DIAL Core will append the Quick Apps configuration to the ",(0,i.jsx)(e.a,{href:"https://dialx.ai/dial_api#operation/sendChatCompletionRequest",children:"chat completion request"})," headers."]}),"\n",(0,i.jsxs)(e.li,{children:["If ",(0,i.jsx)(e.code,{children:'"dial:appendApplicationPropertiesHeader": false'}),", Quick Apps service will request the configuration from DIAL Core with an additional request. This may be the preferred option if the configuration is very large to append to a request header."]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"step-4-dial-chat-environment-variables",children:"Step 4: DIAL Chat Environment Variables"}),"\n",(0,i.jsxs)(e.ol,{children:["\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsx)(e.p,{children:"Specify the following environment variables for DIAL Chat:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:'    # The host URL for Quick Apps Completions URLs. Can lead to public and private resources\n    QUICK_APPS_HOST: "http://quickapps.dial.svc.cluster.local" \n    # applicationTypeSchemaId value for QuickApp application type\n    QUICK_APPS_SCHEMA_ID: "https://mydial.epam.com/custom_application_schemas/quickapps"\n    # A model that will be used in Quick Apps\n    QUICK_APPS_MODEL: "gpt-4o-2024-05-13"\n'})}),"\n"]}),"\n",(0,i.jsxs)(e.li,{children:["\n",(0,i.jsxs)(e.p,{children:["Add ",(0,i.jsx)(e.code,{children:"quick-apps"})," to ",(0,i.jsx)(e.code,{children:"ENABLED_FEATURES"}),":"]}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:'    ENABLED_FEATURES: "...,quick-apps"\n'})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(e.h2,{id:"step-5-dial-core-environment-variables",children:"Step 5: DIAL Core Environment Variables"}),"\n",(0,i.jsx)(e.p,{children:"Set the following environment variable for DIAL Core to include custom applications:"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-yaml",children:'    aidial.applications.includeCustomApps: "true"\n'})}),"\n",(0,i.jsx)(e.h2,{id:"annex",children:"Annex"}),"\n",(0,i.jsx)(e.h5,{id:"quick-apps-schema",children:"Quick Apps Schema"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{className:"language-json",children:'{\n  "applicationTypeSchemas": [\n    {\n      "$schema": "https://dial.epam.com/application_type_schemas/schema#",\n      "$id": "https://mydial.epam.com/custom_application_schemas/quickapps",\n      "dial:applicationTypeDisplayName": "QuickApp",\n      "dial:applicationTypeCompletionEndpoint": "http://quickapps.dial-development.svc.cluster.local/openai/deployments/quick_apps/chat/completions",\n      "dial:applicationTypeConfigurationEndpoint": "http://quickapps.dial-development.svc.cluster.local/openai/deployments/quick_apps/configuration",\n      "dial:appendApplicationPropertiesHeader": true,\n      "$defs": {\n        "ApiKeyAuthorization": {\n          "properties": {\n            "type": {\n              "const": "api_key",\n              "default": "api_key",\n              "title": "Type",\n              "type": "string"\n            },\n            "key": {\n              "title": "Key",\n              "type": "string"\n            },\n            "name": {\n              "title": "Name",\n              "type": "string"\n            },\n            "location": {\n              "$ref": "#/$defs/AuthorizationLocation"\n            }\n          },\n          "required": ["key", "name", "location"],\n          "title": "ApiKeyAuthorization",\n          "type": "object"\n        },\n        "AuthorizationLocation": {\n          "enum": ["header", "query", "body"],\n          "title": "AuthorizationLocation",\n          "type": "string"\n        },\n        "BasicAuthorization": {\n          "properties": {\n            "type": {\n              "const": "basic",\n              "default": "basic",\n              "title": "Type",\n              "type": "string"\n            },\n            "username": {\n              "title": "Username",\n              "type": "string"\n            },\n            "password": {\n              "title": "Password",\n              "type": "string"\n            }\n          },\n          "required": ["username", "password"],\n          "title": "BasicAuthorization",\n          "type": "object"\n        },\n        "BearerAuthorization": {\n          "properties": {\n            "type": {\n              "const": "bearer",\n              "default": "bearer",\n              "title": "Type",\n              "type": "string"\n            },\n            "token": {\n              "title": "Token",\n              "type": "string"\n            }\n          },\n          "required": ["token"],\n          "title": "BearerAuthorization",\n          "type": "object"\n        },\n        "ClientIdSecretAuthorization": {\n          "properties": {\n            "type": {\n              "const": "client_id_secret",\n              "default": "client_id_secret",\n              "title": "Type",\n              "type": "string"\n            },\n            "client_id": {\n              "title": "Client Id",\n              "type": "string"\n            },\n            "client_secret": {\n              "title": "Client Secret",\n              "type": "string"\n            },\n            "token_url": {\n              "title": "Token Url",\n              "type": "string"\n            },\n            "scope": {\n              "anyOf": [\n                {\n                  "type": "string"\n                },\n                {\n                  "type": "null"\n                }\n              ],\n              "title": "Scope"\n            },\n            "aud": {\n              "anyOf": [\n                {\n                  "type": "string"\n                },\n                {\n                  "type": "null"\n                }\n              ],\n              "title": "Aud"\n            }\n          },\n          "required": ["client_id", "client_secret", "token_url", "scope", "aud"],\n          "title": "ClientIdSecretAuthorization",\n          "type": "object"\n        },\n        "ClientToolInfo": {\n          "properties": {\n            "name": {\n              "title": "Name",\n              "type": "string"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            },\n            "parameters": {\n              "items": {\n                "$ref": "#/$defs/ClientToolParameterInfo"\n              },\n              "title": "Parameters",\n              "type": "array"\n            }\n          },\n          "required": ["name", "description", "parameters"],\n          "title": "ClientToolInfo",\n          "type": "object"\n        },\n        "ClientToolParameterInfo": {\n          "properties": {\n            "name": {\n              "title": "Name",\n              "type": "string"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            },\n            "parameter_type": {\n              "$ref": "#/$defs/ToolEndpointParameterTypeInfo"\n            }\n          },\n          "required": ["name", "description", "parameter_type"],\n          "title": "ClientToolParameterInfo",\n          "type": "object"\n        },\n        "ConditionGroup": {\n          "properties": {\n            "conditions": {\n              "items": {\n                "anyOf": [\n                  {\n                    "discriminator": {\n                      "mapping": {\n                        "eq": "#/$defs/EqualityDeploymentCondition",\n                        "match": "#/$defs/MatchDeploymentCondition",\n                        "type": "#/$defs/DeploymentTypeCondition"\n                      },\n                      "propertyName": "condition_type"\n                    },\n                    "oneOf": [\n                      {\n                        "$ref": "#/$defs/EqualityDeploymentCondition"\n                      },\n                      {\n                        "$ref": "#/$defs/MatchDeploymentCondition"\n                      },\n                      {\n                        "$ref": "#/$defs/DeploymentTypeCondition"\n                      }\n                    ]\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "title": "Conditions",\n              "type": "array"\n            }\n          },\n          "required": ["conditions"],\n          "title": "ConditionGroup",\n          "type": "object"\n        },\n        "ConfigurableSchemaArray": {\n          "properties": {\n            "type": {\n              "const": "array",\n              "title": "Type",\n              "type": "string"\n            },\n            "items": {\n              "discriminator": {\n                "mapping": {\n                  "None": "#/$defs/ConfigurableSchemaConst",\n                  "array": "#/$defs/ConfigurableSchemaArray",\n                  "boolean": "#/$defs/ConfigurableSchemaSimpleType",\n                  "integer": "#/$defs/ConfigurableSchemaSimpleType",\n                  "number": "#/$defs/ConfigurableSchemaSimpleType",\n                  "object": "#/$defs/ConfigurableSchemaObject",\n                  "string": "#/$defs/ConfigurableSchemaSimpleType"\n                },\n                "propertyName": "type"\n              },\n              "oneOf": [\n                {\n                  "$ref": "#/$defs/ConfigurableSchemaSimpleType"\n                },\n                {\n                  "$ref": "#/$defs/ConfigurableSchemaConst"\n                },\n                {\n                  "$ref": "#/$defs/ConfigurableSchemaObject"\n                },\n                {\n                  "$ref": "#/$defs/ConfigurableSchemaArray"\n                }\n              ],\n              "title": "Items"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            }\n          },\n          "required": ["type", "items", "description"],\n          "title": "ConfigurableSchemaArray",\n          "type": "object"\n        },\n        "ConfigurableSchemaConst": {\n          "properties": {\n            "type": {\n              "const": null,\n              "title": "Type",\n              "type": "null"\n            },\n            "const": {\n              "title": "Const"\n            }\n          },\n          "required": ["type", "const"],\n          "title": "ConfigurableSchemaConst",\n          "type": "object"\n        },\n        "ConfigurableSchemaObject": {\n          "additionalProperties": false,\n          "properties": {\n            "type": {\n              "const": "object",\n              "title": "Type",\n              "type": "string"\n            },\n            "properties": {\n              "type": "object",\n              "additionalProperties": {\n                "discriminator": {\n                  "mapping": {\n                    "None": "#/$defs/ConfigurableSchemaConst",\n                    "array": "#/$defs/ConfigurableSchemaArray",\n                    "boolean": "#/$defs/ConfigurableSchemaSimpleType",\n                    "integer": "#/$defs/ConfigurableSchemaSimpleType",\n                    "number": "#/$defs/ConfigurableSchemaSimpleType",\n                    "object": "#/$defs/ConfigurableSchemaObject",\n                    "string": "#/$defs/ConfigurableSchemaSimpleType"\n                  },\n                  "propertyName": "type"\n                },\n                "oneOf": [\n                  {\n                    "$ref": "#/$defs/ConfigurableSchemaSimpleType"\n                  },\n                  {\n                    "$ref": "#/$defs/ConfigurableSchemaConst"\n                  },\n                  {\n                    "$ref": "#/$defs/ConfigurableSchemaObject"\n                  },\n                  {\n                    "$ref": "#/$defs/ConfigurableSchemaArray"\n                  }\n                ]\n              },\n              "title": "Properties"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            },\n            "required": {\n              "anyOf": [\n                {\n                  "items": {\n                    "type": "string"\n                  },\n                  "type": "array"\n                },\n                {\n                  "type": "null"\n                }\n              ],\n              "default": null,\n              "title": "Required"\n            }\n          },\n          "required": ["type", "properties", "description"],\n          "title": "ConfigurableSchemaObject",\n          "type": "object"\n        },\n        "ConfigurableSchemaSimpleType": {\n          "properties": {\n            "type": {\n              "enum": ["string", "number", "integer", "boolean"],\n              "title": "Type",\n              "type": "string"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            }\n          },\n          "required": ["type", "description"],\n          "title": "ConfigurableSchemaSimpleType",\n          "type": "object"\n        },\n        "DeploymentTypeCondition": {\n          "properties": {\n            "condition_type": {\n              "const": "type",\n              "title": "Condition Type",\n              "type": "string"\n            },\n            "deployment_type": {\n              "$ref": "#/$defs/DeploymentTypeEnum"\n            }\n          },\n          "required": ["condition_type", "deployment_type"],\n          "title": "DeploymentTypeCondition",\n          "type": "object"\n        },\n        "DeploymentTypeEnum": {\n          "enum": ["application", "model"],\n          "title": "DeploymentTypeEnum",\n          "type": "string"\n        },\n        "EqualityDeploymentCondition": {\n          "properties": {\n            "condition_type": {\n              "const": "eq",\n              "title": "Condition Type",\n              "type": "string"\n            },\n            "property_name": {\n              "$ref": "#/$defs/PropertyEnum"\n            },\n            "const": {\n              "title": "Const",\n              "type": "string"\n            }\n          },\n          "required": ["condition_type", "property_name", "const"],\n          "title": "EqualityDeploymentCondition",\n          "type": "object"\n        },\n        "MatchDeploymentCondition": {\n          "properties": {\n            "condition_type": {\n              "const": "match",\n              "title": "Condition Type",\n              "type": "string"\n            },\n            "property_name": {\n              "$ref": "#/$defs/PropertyEnum"\n            },\n            "expression": {\n              "title": "Expression",\n              "type": "string"\n            }\n          },\n          "required": ["condition_type", "property_name", "expression"],\n          "title": "MatchDeploymentCondition",\n          "type": "object"\n        },\n        "OpenAiToolConfig_RestApiEndpointObjectParam_RestApiEndpointArrayParam_RestApiEndpointSimpleTypeParam_RestApiEndpointConstParam_": {\n          "properties": {\n            "type": {\n              "const": "function",\n              "default": "function",\n              "title": "Type",\n              "type": "string"\n            },\n            "function": {\n              "$ref": "#/$defs/OpenAiToolFunction_RestApiEndpointSimpleTypeParam_RestApiEndpointConstParam_RestApiEndpointObjectParam_RestApiEndpointArrayParam_"\n            }\n          },\n          "required": ["function"],\n          "title": "OpenAiToolConfig[RestApiEndpointObjectParam, RestApiEndpointArrayParam, RestApiEndpointSimpleTypeParam, RestApiEndpointConstParam]",\n          "type": "object"\n        },\n        "OpenAiToolFunctionParameters_RestApiEndpointSimpleTypeParam_RestApiEndpointConstParam_RestApiEndpointObjectParam_RestApiEndpointArrayParam_": {\n          "properties": {\n            "type": {\n              "const": "object",\n              "title": "Type",\n              "type": "string"\n            },\n            "properties": {\n              "type": "object",\n              "additionalProperties": {\n                "discriminator": {\n                  "mapping": {\n                    "None": "#/$defs/RestApiEndpointConstParam",\n                    "array": "#/$defs/RestApiEndpointArrayParam",\n                    "boolean": "#/$defs/RestApiEndpointSimpleTypeParam",\n                    "integer": "#/$defs/RestApiEndpointSimpleTypeParam",\n                    "number": "#/$defs/RestApiEndpointSimpleTypeParam",\n                    "object": "#/$defs/RestApiEndpointObjectParam",\n                    "string": "#/$defs/RestApiEndpointSimpleTypeParam"\n                  },\n                  "propertyName": "type"\n                },\n                "oneOf": [\n                  {\n                    "$ref": "#/$defs/RestApiEndpointSimpleTypeParam"\n                  },\n                  {\n                    "$ref": "#/$defs/RestApiEndpointConstParam"\n                  },\n                  {\n                    "$ref": "#/$defs/RestApiEndpointObjectParam"\n                  },\n                  {\n                    "$ref": "#/$defs/RestApiEndpointArrayParam"\n                  }\n                ]\n              },\n              "title": "Properties"\n            },\n            "required": {\n              "anyOf": [\n                {\n                  "items": {\n                    "type": "string"\n                  },\n                  "type": "array"\n                },\n                {\n                  "type": "null"\n                }\n              ],\n              "default": null,\n              "title": "Required"\n            }\n          },\n          "required": ["type", "properties"],\n          "title": "OpenAiToolFunctionParameters[RestApiEndpointSimpleTypeParam, RestApiEndpointConstParam, RestApiEndpointObjectParam, RestApiEndpointArrayParam]",\n          "type": "object"\n        },\n        "OpenAiToolFunction_RestApiEndpointSimpleTypeParam_RestApiEndpointConstParam_RestApiEndpointObjectParam_RestApiEndpointArrayParam_": {\n          "properties": {\n            "parameters": {\n              "$ref": "#/$defs/OpenAiToolFunctionParameters_RestApiEndpointSimpleTypeParam_RestApiEndpointConstParam_RestApiEndpointObjectParam_RestApiEndpointArrayParam_"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            },\n            "name": {\n              "title": "Name",\n              "type": "string"\n            }\n          },\n          "required": ["parameters", "description", "name"],\n          "title": "OpenAiToolFunction[RestApiEndpointSimpleTypeParam, RestApiEndpointConstParam, RestApiEndpointObjectParam, RestApiEndpointArrayParam]",\n          "type": "object"\n        },\n        "PropertyEnum": {\n          "enum": ["display_name", "description", "application", "id"],\n          "title": "PropertyEnum",\n          "type": "string"\n        },\n        "RestApiEndpointArrayParam": {\n          "properties": {\n            "parameter_info": {\n              "$ref": "#/$defs/RestApiEndpointHeaderParamInfo"\n            },\n            "type": {\n              "const": "array",\n              "title": "Type",\n              "type": "string"\n            },\n            "items": {\n              "discriminator": {\n                "mapping": {\n                  "None": "#/$defs/ConfigurableSchemaConst",\n                  "array": "#/$defs/ConfigurableSchemaArray",\n                  "boolean": "#/$defs/ConfigurableSchemaSimpleType",\n                  "integer": "#/$defs/ConfigurableSchemaSimpleType",\n                  "number": "#/$defs/ConfigurableSchemaSimpleType",\n                  "object": "#/$defs/ConfigurableSchemaObject",\n                  "string": "#/$defs/ConfigurableSchemaSimpleType"\n                },\n                "propertyName": "type"\n              },\n              "oneOf": [\n                {\n                  "$ref": "#/$defs/ConfigurableSchemaSimpleType"\n                },\n                {\n                  "$ref": "#/$defs/ConfigurableSchemaConst"\n                },\n                {\n                  "$ref": "#/$defs/ConfigurableSchemaObject"\n                },\n                {\n                  "$ref": "#/$defs/ConfigurableSchemaArray"\n                }\n              ],\n              "title": "Items"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            }\n          },\n          "required": ["parameter_info", "type", "items", "description"],\n          "title": "RestApiEndpointArrayParam",\n          "type": "object"\n        },\n        "RestApiEndpointConstParam": {\n          "properties": {\n            "parameter_info": {\n              "$ref": "#/$defs/RestApiEndpointHeaderParamInfo"\n            },\n            "type": {\n              "const": null,\n              "title": "Type",\n              "type": "null"\n            },\n            "const": {\n              "title": "Const"\n            }\n          },\n          "required": ["parameter_info", "type", "const"],\n          "title": "RestApiEndpointConstParam",\n          "type": "object"\n        },\n        "RestApiEndpointHeaderParamInfo": {\n          "properties": {\n            "type": {\n              "$ref": "#/$defs/ToolEndpointParamType"\n            },\n            "key": {\n              "title": "Key",\n              "type": "string"\n            }\n          },\n          "required": ["type", "key"],\n          "title": "RestApiEndpointHeaderParamInfo",\n          "type": "object"\n        },\n        "RestApiEndpointMethodInfo": {\n          "properties": {\n            "method_url": {\n              "title": "Method Url",\n              "type": "string"\n            },\n            "method_type": {\n              "$ref": "#/$defs/ToolEndpointInfoMethodType"\n            }\n          },\n          "required": ["method_url", "method_type"],\n          "title": "RestApiEndpointMethodInfo",\n          "type": "object"\n        },\n        "RestApiEndpointObjectParam": {\n          "additionalProperties": false,\n          "properties": {\n            "parameter_info": {\n              "$ref": "#/$defs/RestApiEndpointHeaderParamInfo"\n            },\n            "type": {\n              "const": "object",\n              "title": "Type",\n              "type": "string"\n            },\n            "properties": {\n              "type": "object",\n              "additionalProperties": {\n                "discriminator": {\n                  "mapping": {\n                    "None": "#/$defs/ConfigurableSchemaConst",\n                    "array": "#/$defs/ConfigurableSchemaArray",\n                    "boolean": "#/$defs/ConfigurableSchemaSimpleType",\n                    "integer": "#/$defs/ConfigurableSchemaSimpleType",\n                    "number": "#/$defs/ConfigurableSchemaSimpleType",\n                    "object": "#/$defs/ConfigurableSchemaObject",\n                    "string": "#/$defs/ConfigurableSchemaSimpleType"\n                  },\n                  "propertyName": "type"\n                },\n                "oneOf": [\n                  {\n                    "$ref": "#/$defs/ConfigurableSchemaSimpleType"\n                  },\n                  {\n                    "$ref": "#/$defs/ConfigurableSchemaConst"\n                  },\n                  {\n                    "$ref": "#/$defs/ConfigurableSchemaObject"\n                  },\n                  {\n                    "$ref": "#/$defs/ConfigurableSchemaArray"\n                  }\n                ]\n              },\n              "title": "Properties"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            },\n            "required": {\n              "anyOf": [\n                {\n                  "items": {\n                    "type": "string"\n                  },\n                  "type": "array"\n                },\n                {\n                  "type": "null"\n                }\n              ],\n              "default": null,\n              "title": "Required"\n            }\n          },\n          "required": ["parameter_info", "type", "properties", "description"],\n          "title": "RestApiEndpointObjectParam",\n          "type": "object"\n        },\n        "RestApiEndpointSimpleTypeParam": {\n          "properties": {\n            "parameter_info": {\n              "$ref": "#/$defs/RestApiEndpointHeaderParamInfo"\n            },\n            "type": {\n              "enum": ["string", "number", "integer", "boolean"],\n              "title": "Type",\n              "type": "string"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            }\n          },\n          "required": ["parameter_info", "type", "description"],\n          "title": "RestApiEndpointSimpleTypeParam",\n          "type": "object"\n        },\n        "RestApiTool": {\n          "properties": {\n            "open_ai_tool": {\n              "$ref": "#/$defs/OpenAiToolConfig_RestApiEndpointObjectParam_RestApiEndpointArrayParam_RestApiEndpointSimpleTypeParam_RestApiEndpointConstParam_"\n            },\n            "rest_api_method_info": {\n              "$ref": "#/$defs/RestApiEndpointMethodInfo"\n            }\n          },\n          "required": ["open_ai_tool", "rest_api_method_info"],\n          "title": "RestApiTool",\n          "type": "object"\n        },\n        "RestApiToolset": {\n          "properties": {\n            "type": {\n              "const": "rest-api",\n              "default": "rest-api",\n              "description": "The type of the tool set.",\n              "title": "Type",\n              "type": "string"\n            },\n            "authorization": {\n              "anyOf": [\n                {\n                  "discriminator": {\n                    "mapping": {\n                      "api_key": "#/$defs/ApiKeyAuthorization",\n                      "basic": "#/$defs/BasicAuthorization",\n                      "bearer": "#/$defs/BearerAuthorization",\n                      "client_id_secret": "#/$defs/ClientIdSecretAuthorization"\n                    },\n                    "propertyName": "type"\n                  },\n                  "oneOf": [\n                    {\n                      "$ref": "#/$defs/BasicAuthorization"\n                    },\n                    {\n                      "$ref": "#/$defs/BearerAuthorization"\n                    },\n                    {\n                      "$ref": "#/$defs/ClientIdSecretAuthorization"\n                    },\n                    {\n                      "$ref": "#/$defs/ApiKeyAuthorization"\n                    }\n                  ]\n                },\n                {\n                  "type": "null"\n                }\n              ],\n              "title": "Authorization"\n            },\n            "tools": {\n              "items": {\n                "$ref": "#/$defs/RestApiTool"\n              },\n              "title": "Tools",\n              "type": "array"\n            },\n            "name": {\n              "title": "Name",\n              "type": "string"\n            }\n          },\n          "required": ["authorization", "tools", "name"],\n          "title": "RestApiToolset",\n          "type": "object"\n        },\n        "ToolEndpointInfo": {\n          "properties": {\n            "name": {\n              "title": "Name",\n              "type": "string"\n            },\n            "method_url": {\n              "title": "Method Url",\n              "type": "string"\n            },\n            "method_type": {\n              "$ref": "#/$defs/ToolEndpointInfoMethodType"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            },\n            "parameters": {\n              "items": {\n                "$ref": "#/$defs/ToolEndpointParameterInfo"\n              },\n              "title": "Parameters",\n              "type": "array"\n            }\n          },\n          "required": ["name", "method_url", "method_type", "description", "parameters"],\n          "title": "ToolEndpointInfo",\n          "type": "object"\n        },\n        "ToolEndpointInfoMethodType": {\n          "enum": ["get", "post", "put", "delete"],\n          "title": "ToolEndpointInfoMethodType",\n          "type": "string"\n        },\n        "ToolEndpointParamType": {\n          "enum": ["query", "url", "body", "header"],\n          "title": "ToolEndpointParamType",\n          "type": "string"\n        },\n        "ToolEndpointParameterInfo": {\n          "properties": {\n            "name": {\n              "title": "Name",\n              "type": "string"\n            },\n            "description": {\n              "title": "Description",\n              "type": "string"\n            },\n            "url_param": {\n              "default": false,\n              "title": "Url Param",\n              "type": "boolean"\n            },\n            "constant_value": {\n              "default": null,\n              "title": "Constant Value"\n            },\n            "parameter_type": {\n              "$ref": "#/$defs/ToolEndpointParameterTypeInfo"\n            },\n            "item_parameter_type": {\n              "anyOf": [\n                {\n                  "$ref": "#/$defs/ToolEndpointParameterTypeInfo"\n                },\n                {\n                  "type": "null"\n                }\n              ],\n              "default": null\n            },\n            "item_descriptor": {\n              "anyOf": [\n                {\n                  "type": "string"\n                },\n                {\n                  "type": "null"\n                }\n              ],\n              "default": null,\n              "title": "Item Descriptor"\n            }\n          },\n          "required": ["name", "description", "parameter_type"],\n          "title": "ToolEndpointParameterInfo",\n          "type": "object"\n        },\n        "ToolEndpointParameterTypeInfo": {\n          "enum": ["string", "number", "integer", "object", "array", "boolean"],\n          "title": "ToolEndpointParameterTypeInfo",\n          "type": "string"\n        },\n        "WebApiToolsetInfo": {\n          "properties": {\n            "tool_endpoints": {\n              "items": {\n                "$ref": "#/$defs/ToolEndpointInfo"\n              },\n              "title": "Tool Endpoints",\n              "type": "array"\n            },\n            "auth_info": {\n              "anyOf": [\n                {\n                  "discriminator": {\n                    "mapping": {\n                      "apikey": "#/$defs/WebApiToolsetKeyAuthInfo",\n                      "obo": "#/$defs/WebApiToolsetOBOAuthInfo"\n                    },\n                    "propertyName": "auth_type"\n                  },\n                  "oneOf": [\n                    {\n                      "$ref": "#/$defs/WebApiToolsetOBOAuthInfo"\n                    },\n                    {\n                      "$ref": "#/$defs/WebApiToolsetKeyAuthInfo"\n                    }\n                  ]\n                },\n                {\n                  "type": "null"\n                }\n              ],\n              "title": "Auth Info"\n            }\n          },\n          "required": ["tool_endpoints", "auth_info"],\n          "title": "WebApiToolsetInfo",\n          "type": "object"\n        },\n        "WebApiToolsetKeyAuthInfo": {\n          "properties": {\n            "auth_type": {\n              "const": "apikey",\n              "title": "Auth Type",\n              "type": "string"\n            },\n            "api_key": {\n              "format": "password",\n              "title": "Api Key",\n              "type": "string",\n              "writeOnly": true\n            },\n            "url_param": {\n              "default": false,\n              "title": "Url Param",\n              "type": "boolean"\n            }\n          },\n          "required": ["auth_type", "api_key"],\n          "title": "WebApiToolsetKeyAuthInfo",\n          "type": "object"\n        },\n        "WebApiToolsetOBOAuthInfo": {\n          "properties": {\n            "auth_type": {\n              "const": "obo",\n              "title": "Auth Type",\n              "type": "string"\n            },\n            "tenant": {\n              "title": "Tenant",\n              "type": "string"\n            },\n            "grant_type": {\n              "title": "Grant Type",\n              "type": "string"\n            },\n            "client_id": {\n              "title": "Client Id",\n              "type": "string"\n            },\n            "client_secret": {\n              "format": "password",\n              "title": "Client Secret",\n              "type": "string",\n              "writeOnly": true\n            },\n            "scope": {\n              "title": "Scope",\n              "type": "string"\n            },\n            "assertion": {\n              "title": "Assertion",\n              "type": "string"\n            }\n          },\n          "required": [\n            "auth_type",\n            "tenant",\n            "grant_type",\n            "client_id",\n            "client_secret",\n            "scope",\n            "assertion"\n          ],\n          "title": "WebApiToolsetOBOAuthInfo",\n          "type": "object"\n        }\n      },\n      "properties": {\n        "temperature": {\n          "title": "Temperature",\n          "type": "number",\n          "dial:meta": {\n            "dial:propertyKind": "server",\n            "dial:propertyOrder": 1\n          }\n        },\n        "instructions": {\n          "title": "Instructions",\n          "type": "string",\n          "dial:meta": {\n            "dial:propertyKind": "server",\n            "dial:propertyOrder": 2\n          }\n        },\n        "model": {\n          "anyOf": [\n            {\n              "$ref": "#/$defs/ConditionGroup"\n            },\n            {\n              "type": "string"\n            }\n          ],\n          "title": "Model",\n          "dial:meta": {\n            "dial:propertyKind": "server",\n            "dial:propertyOrder": 3\n          }\n        },\n        "web_api_toolset": {\n          "items": {\n            "anyOf": [\n              {\n                "$ref": "#/$defs/WebApiToolsetInfo"\n              },\n              {\n                "$ref": "#/$defs/RestApiToolset"\n              }\n            ]\n          },\n          "title": "Web Api Toolset",\n          "type": "array",\n          "dial:meta": {\n            "dial:propertyKind": "server",\n            "dial:propertyOrder": 4\n          }\n        },\n        "document_relative_url": {\n          "oneOf": [\n            {\n              "type": "string",\n              "format": "dial-file-encoded",\n              "dial:file": true\n            },\n            {\n              "type": "array",\n              "items": {\n                "type": "string",\n                "dial:file": true,\n                "format": "dial-file-encoded"\n              }\n            }\n          ],\n          "default": null,\n          "title": "Document Relative Url",\n          "dial:meta": {\n            "dial:propertyKind": "server",\n            "dial:propertyOrder": 5\n          }\n        },\n        "starters": {\n          "anyOf": [\n            {\n              "items": {\n                "type": "string"\n              },\n              "type": "array"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "title": "Starters",\n          "dial:meta": {\n            "dial:propertyKind": "server",\n            "dial:propertyOrder": 6\n          }\n        },\n        "applications_as_tools": {\n          "anyOf": [\n            {\n              "items": {\n                "anyOf": [\n                  {\n                    "$ref": "#/$defs/ConditionGroup"\n                  },\n                  {\n                    "type": "string"\n                  }\n                ]\n              },\n              "type": "array"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "title": "Applications As Tools",\n          "dial:meta": {\n            "dial:propertyKind": "server",\n            "dial:propertyOrder": 7\n          }\n        },\n        "attachments_in_stage": {\n          "anyOf": [\n            {\n              "type": "boolean"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "title": "Attachments In Stage",\n          "dial:meta": {\n            "dial:propertyKind": "server",\n            "dial:propertyOrder": 8\n          }\n        },\n        "client_toolset": {\n          "anyOf": [\n            {\n              "items": {\n                "$ref": "#/$defs/ClientToolInfo"\n              },\n              "type": "array"\n            },\n            {\n              "type": "null"\n            }\n          ],\n          "default": null,\n          "title": "Client Toolset",\n          "dial:meta": {\n            "dial:propertyKind": "server",\n            "dial:propertyOrder": 9\n          }\n        }\n      },\n      "required": ["temperature", "instructions", "model", "web_api_toolset"],\n      "title": "QuickAppInfo",\n      "type": "object"\n    }\n  ]\n}\n\n'})})]})}function c(n={}){const{wrapper:e}={...(0,r.a)(),...n.components};return e?(0,i.jsx)(e,{...n,children:(0,i.jsx)(d,{...n})}):d(n)}},1151:(n,e,t)=>{t.d(e,{Z:()=>a,a:()=>p});var i=t(7294);const r={},o=i.createContext(r);function p(n){const e=i.useContext(o);return i.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function a(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(r):n.components||r:p(n.components),i.createElement(o.Provider,{value:e},n.children)}}}]);