"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[1692],{89232:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>o,default:()=>h,frontMatter:()=>a,metadata:()=>r,toc:()=>c});var s=t(85893),i=t(11151);const a={},o="Analytics",r={id:"platform/realtime-analytics-intro",title:"Analytics",description:"Introduction",source:"@site/docs/platform/6.realtime-analytics-intro.md",sourceDirName:"platform",slug:"/platform/realtime-analytics-intro",permalink:"/platform/realtime-analytics-intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:6,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"Multimodality",permalink:"/platform/multimodality"},next:{title:"Collaboration in DIAL",permalink:"/platform/collaboration-intro"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Configuration",id:"configuration",level:2},{value:"Disable Logging of User Information",id:"disable-logging-of-user-information",level:2}];function d(e){const n={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.h1,{id:"analytics",children:"Analytics"}),"\n",(0,s.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"https://github.com/epam/ai-dial-core",children:"DIAL Core"})," collects ",(0,s.jsx)(n.strong,{children:"system logs"})," and ",(0,s.jsx)(n.strong,{children:"chat completion logs"}),":"]}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsxs)(n.li,{children:["System logs do not include any user data and contain logs of all requests from system components to DIAL Core (using the ELK stack (Elasticsearch, Logstash, Kibana) or other log collection system). Refer to ",(0,s.jsx)(n.a,{href:"/tutorials/devops/observability-config",children:"Observability"})," to learn about logs, metrics and traces supported in DIAL."]}),"\n",(0,s.jsxs)(n.li,{children:[(0,s.jsx)(n.a,{href:"https://dialx.ai/dial_api#/paths/~1openai~1deployments~1%7BDeployment%20Name%7D~1chat~1completions/post",children:"Chat completion requests"})," logs include information that users send in their requests to LLMs and the information they get in responses."]}),"\n"]}),"\n",(0,s.jsxs)(n.p,{children:[(0,s.jsx)(n.a,{href:"/platform/architecture-and-concepts/architecture#full-platform-landscape",children:"DIAL setup"})," can include a special service called DIAL Analytics Realtime, which uses diverse techniques such as embedding algorithms, clustering algorithms, frameworks, light-weight self-hosted language models, to analyze ",(0,s.jsx)(n.strong,{children:"chat completion logs"})," and extract the needed information, which can be presented in tools such as Grafana for visualization and analytics."]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(40653).Z+"",width:"1907",height:"917"})}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Refer to ",(0,s.jsx)(n.a,{href:"https://github.com/epam/ai-dial-analytics-realtime",children:"Analytics Realtime"})," repository to learn more and view the project source code."]}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:"Analytics Realtime does not retain any private information, such as user prompts or conversations, beyond the system. Instead, only the computed artifacts are collected and stored in time-series databases like InfluxDB or any scalable database capable of handling voluminous, constantly changing information."}),"\n",(0,s.jsx)(n.p,{children:"Examples of the computed artifacts:"}),"\n",(0,s.jsxs)(n.ul,{children:["\n",(0,s.jsx)(n.li,{children:"Information about user(user hash, title, and never personal data such as names)."}),"\n",(0,s.jsx)(n.li,{children:"What areas have people asked questions about?"}),"\n",(0,s.jsx)(n.li,{children:"Are there any recurring patterns?"}),"\n",(0,s.jsx)(n.li,{children:"Topics of conversations."}),"\n",(0,s.jsx)(n.li,{children:"Unique users."}),"\n",(0,s.jsx)(n.li,{children:"Sentiments."}),"\n",(0,s.jsx)(n.li,{children:"Cost analysis of the communication."}),"\n",(0,s.jsx)(n.li,{children:"Language of conversations."}),"\n",(0,s.jsx)(n.li,{children:"Any other calculated statistics based on conversations."}),"\n"]}),"\n",(0,s.jsx)(n.p,{children:(0,s.jsx)(n.img,{src:t(44259).Z+"",width:"1712",height:"897"})}),"\n",(0,s.jsx)(n.h2,{id:"configuration",children:"Configuration"}),"\n",(0,s.jsxs)(n.blockquote,{children:["\n",(0,s.jsxs)(n.p,{children:["Refer to ",(0,s.jsx)(n.a,{href:"/tutorials/devops/configuration/realtime-analytics-config",children:"Analytics Realtime Configuration"})," to see configuration guidelines."]}),"\n"]}),"\n",(0,s.jsx)(n.h2,{id:"disable-logging-of-user-information",children:"Disable Logging of User Information"}),"\n",(0,s.jsxs)(n.p,{children:["DIAL Core ",(0,s.jsx)(n.strong,{children:"will log"})," all user requests and deployment responses authorized with an access token (like JWT) or ",(0,s.jsx)(n.strong,{children:"unsecured"})," API keys. To avoid this, create and use a ",(0,s.jsx)(n.strong,{children:"secured"})," API key - in this case the system will not collect logs of user requests and related responses from applications and models."]}),"\n",(0,s.jsxs)(n.p,{children:["Refer to ",(0,s.jsx)(n.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"DIAL Core configuration"})," to learn how to create secured and other types of API keys."]})]})}function h(e={}){const{wrapper:n}={...(0,i.a)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},40653:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/grafana-4e3ed25f26820201a2552695164a7eeb.png"},44259:(e,n,t)=>{t.d(n,{Z:()=>s});const s=t.p+"assets/images/grafana2-4aaa68d81e54bc7f044c7b09b7599c52.png"},11151:(e,n,t)=>{t.d(n,{Z:()=>r,a:()=>o});var s=t(67294);const i={},a=s.createContext(i);function o(e){const n=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(a.Provider,{value:n},e.children)}}}]);