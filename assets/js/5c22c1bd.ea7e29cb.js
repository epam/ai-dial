"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[6058],{7029:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var t=o(5893),n=o(1151);const r={},a="DIAL Unified API",s={id:"video demos/demos-for-developers/dial-unified-api",title:"DIAL Unified API",description:"https://youtu.be/PqIHlRKQMkw",source:"@site/docs/video demos/demos-for-developers/dial-unified-api.md",sourceDirName:"video demos/demos-for-developers",slug:"/video demos/demos-for-developers/dial-unified-api",permalink:"/video demos/demos-for-developers/dial-unified-api",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"CustomSideBar",previous:{title:"DIAL RAG Evaluation Toolkit",permalink:"/video demos/demos-for-developers/dial-rag-eval"}},d={},l=[];function c(e){const i={h1:"h1",iframe:"iframe",p:"p",...(0,n.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"dial-unified-api",children:"DIAL Unified API"}),"\n",(0,t.jsx)(i.iframe,{className:"iframe-video",src:"https://www.youtube.com/embed/PqIHlRKQMkw?feature=oembed",frameBorder:"0",allow:"accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share",referrerPolicy:"strict-origin-when-cross-origin",allowFullScreen:!0,title:"DIAL for Developers: Unified API"}),"\n",(0,t.jsx)(i.p,{children:"By providing a unified API for all models and applications in your DIAL instance, DIAL eliminates the need for multiple protocols for each integration, making it easier to develop and maintain applications within the AI DIAL ecosystem. In addition, it alleviates concerns of vendor lock-in and provides peace of mind that changing models or applications within your DIAL-based application will not require a complete code re-write."})]})}function p(e={}){const{wrapper:i}={...(0,n.a)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},1151:(e,i,o)=>{o.d(i,{Z:()=>s,a:()=>a});var t=o(7294);const n={},r=t.createContext(n);function a(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);