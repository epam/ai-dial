"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[4832],{7205:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>l,contentTitle:()=>i,default:()=>u,frontMatter:()=>c,metadata:()=>o,toc:()=>a});var t=r(5893),s=r(1151);const c={},i="Using Secrets from Azure Key Vault in Helm Values",o={id:"Deployment/azure-secrets",title:"Using Secrets from Azure Key Vault in Helm Values",description:"Introduction",source:"@site/docs/Deployment/azure-secrets.md",sourceDirName:"Deployment",slug:"/Deployment/azure-secrets",permalink:"/Deployment/azure-secrets",draft:!1,unlisted:!1,tags:[],version:"current",frontMatter:{},sidebar:"CustomSideBar",previous:{title:"Custom Apps Deployment",permalink:"/Deployment/custom_apps_deployment"},next:{title:"configuration",permalink:"/Deployment/configuration"}},l={},a=[{value:"Introduction",id:"introduction",level:2},{value:"Step 1: Define SecretProviderClass",id:"step-1-define-secretproviderclass",level:2},{value:"Step 2: Mount Secrets to Pod",id:"step-2-mount-secrets-to-pod",level:2},{value:"Step 3: Define Environment Variables",id:"step-3-define-environment-variables",level:2},{value:"Configuration Examples",id:"configuration-examples",level:2},{value:"Secrets for DIAL Chat",id:"secrets-for-dial-chat",level:3},{value:"Step 1: Define SecretProviderClass",id:"step-1-define-secretproviderclass-1",level:4},{value:"Step 2: Reference Kubernetes Secret",id:"step-2-reference-kubernetes-secret",level:4},{value:"Secrets for DIAL Core",id:"secrets-for-dial-core",level:3},{value:"Step 1: Define SecretProviderClass",id:"step-1-define-secretproviderclass-2",level:4},{value:"Step 2: Reference Kubernetes Secret",id:"step-2-reference-kubernetes-secret-1",level:4}];function d(e){const n={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"using-secrets-from-azure-key-vault-in-helm-values",children:"Using Secrets from Azure Key Vault in Helm Values"}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"In this tutorial, you'll discover how to implement a configuration to securely retrieve and utilize secrets from Azure Key Vault in your Kubernetes pods using the Secrets Store CSI Driver."}),"\n",(0,t.jsx)(n.p,{children:"Add this setup to your Helm deployment to manage secrets safely and effectively. The secrets will be stored as files inside the pod, making it easy and secure to integrate secret management with your applications."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Refer to ",(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/aks/csi-secrets-store-driver",children:"Secrets Store CSI Driver in Azure"})," to learn how to add secrets."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-1-define-secretproviderclass",children:"Step 1: Define SecretProviderClass"}),"\n",(0,t.jsxs)(n.p,{children:["Add the following configuration to your Helm ",(0,t.jsx)(n.code,{children:"values.yaml"})," file define the method for retrieving secrets from Azure Key Vault:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'extraDeploy:\n  - apiVersion: secrets-store.csi.x-k8s.io/v1\n    kind: SecretProviderClass\n    metadata:\n      name: "${NAME}" # must be unique for each namespace\n      namespace: "${NAMESPACE}"\n    spec:\n      provider: azure\n      parameters:\n        clientID: "${USER_ASSIGNED_CLIENT_ID}"\n        cloudName: AzurePublicCloud\n        keyvaultName: ${KEYVAULT_NAME}\n        objects: |\n          array:\n            - |\n              objectName: secret1\n              objectType: secret\n              objectVersion: ""\n            - |\n              objectName: secret2\n              objectType: secret\n              objectVersion: ""\n        tenantID: "${IDENTITY_TENANT}"\n        usePodIdentity: "false"\n'})}),"\n",(0,t.jsx)(n.p,{children:"Replace the placeholders with your actual values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${NAME}"}),": the name of the ",(0,t.jsx)(n.code,{children:"SecretProviderClass"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${NAMESPACE}"}),": the Kubernetes namespace where the resources will be deployed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${USER_ASSIGNED_CLIENT_ID}"}),": ",(0,t.jsx)(n.code,{children:"Client ID"})," of the user-assigned managed identity."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${KEYVAULT_NAME}"}),": the name of your Azure Key Vault."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${IDENTITY_TENANT}"}),": ",(0,t.jsx)(n.code,{children:"Tenant ID"})," for your Azure Active Directory."]}),"\n"]}),"\n",(0,t.jsx)(n.h2,{id:"step-2-mount-secrets-to-pod",children:"Step 2: Mount Secrets to Pod"}),"\n",(0,t.jsxs)(n.p,{children:["Configure the ",(0,t.jsx)(n.code,{children:"extraVolumes"})," and ",(0,t.jsx)(n.code,{children:"extraVolumeMounts"})," in your Helm ",(0,t.jsx)(n.code,{children:"values.yaml"})," file to make the secrets accessible to your application:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'core:\n\n  extraVolumes:\n    - name: secrets\n      csi:\n        driver: secrets-store.csi.k8s.io\n        readOnly: true\n        volumeAttributes:\n          secretProviderClass: "${NAME}"\n\nextraVolumeMounts:\n  - name: secrets\n    readOnly: true\n    mountPath: /mnt/secrets-store\n'})}),"\n",(0,t.jsx)(n.h2,{id:"step-3-define-environment-variables",children:"Step 3: Define Environment Variables"}),"\n",(0,t.jsx)(n.p,{children:"Specify the paths to the mounted secrets in your environment variables:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'core:\n\n  env:\n    aidial.config.files: >-\n      [\n      "/mnt/secrets-store/secret1",\n      "/mnt/secrets-store/secret2"\n      ]\n'})}),"\n",(0,t.jsx)(n.h2,{id:"configuration-examples",children:"Configuration Examples"}),"\n",(0,t.jsx)(n.h3,{id:"secrets-for-dial-chat",children:"Secrets for DIAL Chat"}),"\n",(0,t.jsx)(n.p,{children:"This example demonstrates how to utilize specific secrets from Azure Key Vault to create a Kubernetes secret for use in DIAL Chat."}),"\n",(0,t.jsx)(n.h4,{id:"step-1-define-secretproviderclass-1",children:"Step 1: Define SecretProviderClass"}),"\n",(0,t.jsxs)(n.p,{children:["Add the following to your Helm ",(0,t.jsx)(n.code,{children:"values.yaml"})," file to define the ",(0,t.jsx)(n.code,{children:"SecretProviderClass"})," for DIAL Chat:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'extraDeploy:\n  - apiVersion: secrets-store.csi.x-k8s.io/v1\n    kind: SecretProviderClass\n    metadata:\n      namespace: "${NAMESPACE}"\n      name: "${NAME}" # must be unique for each namespace\n    spec:\n      provider: azure\n      parameters:\n        usePodIdentity: "false"\n        clientID: "${USER_ASSIGNED_CLIENT_ID}"\n        cloudName: AzurePublicCloud\n        keyvaultName: ${KEYVAULT_NAME}\n        tenantID: "${IDENTITY_TENANT}"\n        objects: |\n          array:\n            - |\n              objectName: nextauth-secret\n              objectType: secret\n            - |\n              objectName: auth-azuread-client-id\n              objectType: secret\n            - |\n              objectName: auth-azuread-client-secret\n              objectType: secret\n      secretObjects:\n        - secretName: "${SECRET_NAME}"\n          type: Opaque\n          data:\n            - objectName: nextauth-secret\n              key: NEXTAUTH_SECRET\n            - objectName: auth-azuread-client-id\n              key: AUTH_AZURE_AD_CLIENT_ID\n            - objectName: auth-azuread-client-secret\n              key: AUTH_AZURE_AD_SECRET\n'})}),"\n",(0,t.jsx)(n.p,{children:"Replace the placeholders with your actual values:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${NAME}"}),": the name of the ",(0,t.jsx)(n.code,{children:"SecretProviderClass"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${NAMESPACE}"}),": the Kubernetes namespace where the resources will be deployed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${USER_ASSIGNED_CLIENT_ID}"}),": ",(0,t.jsx)(n.code,{children:"Client ID"})," of the user-assigned managed identity."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${KEYVAULT_NAME}"}),": the name of your Azure Key Vault."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${IDENTITY_TENANT}"}),": ",(0,t.jsx)(n.code,{children:"Tenant ID"})," for your Azure Active Directory."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${SECRET_NAME}"}),": the Kubernetes secret name."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"step-2-reference-kubernetes-secret",children:"Step 2: Reference Kubernetes Secret"}),"\n",(0,t.jsx)(n.p,{children:"Reference the Kubernetes Secret in the DIAL Chat configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'chat:\n\n  extraEnvVarsSecret: "${SECRET_NAME}"\n\n  extraVolumes:\n    - name: secrets\n      csi:\n        driver: secrets-store.csi.k8s.io\n        readOnly: true\n        volumeAttributes:\n          secretProviderClass: "${NAME}"\n\n  extraVolumeMounts:\n    - name: secrets\n      readOnly: true\n      mountPath: /mnt/secrets-store\n'})}),"\n",(0,t.jsx)(n.h3,{id:"secrets-for-dial-core",children:"Secrets for DIAL Core"}),"\n",(0,t.jsx)(n.p,{children:"This example demonstrates how to utilize specific secrets from Azure Key Vault to create a Kubernetes secret for use in DIAL Core encryption."}),"\n",(0,t.jsx)(n.h4,{id:"step-1-define-secretproviderclass-2",children:"Step 1: Define SecretProviderClass"}),"\n",(0,t.jsxs)(n.p,{children:["Add the following to your Helm ",(0,t.jsx)(n.code,{children:"values.yaml"})," file to define the ",(0,t.jsx)(n.code,{children:"SecretProviderClass"})," for DIAL Core:"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'extraDeploy:\n  - apiVersion: secrets-store.csi.x-k8s.io/v1\n    kind: SecretProviderClass\n    metadata:\n      namespace: "${NAMESPACE}"\n      name: "${NAME}" # must be unique for each namespace\n    spec:\n      provider: azure\n      parameters:\n        usePodIdentity: "false"\n        clientID: "${USER_ASSIGNED_CLIENT_ID}"\n        cloudName: AzurePublicCloud\n        keyvaultName: ${KEYVAULT_NAME}\n        tenantID: "${IDENTITY_TENANT}"\n        objects: |\n          array:\n            - |\n              objectName: encryption-secret\n              objectType: secret\n            - |\n              objectName: encryption-key\n              objectType: secret\n      secretObjects:\n        - secretName: "${SECRET_NAME}"\n          type: Opaque\n          data:\n            - objectName: encryption-secret\n              key: aidial.encryption.secret\n            - objectName: encryption-key\n              key: aidial.encryption.key\n'})}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${NAME}"}),": the name of the ",(0,t.jsx)(n.code,{children:"SecretProviderClass"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${NAMESPACE}"}),": the Kubernetes namespace where the resources will be deployed."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${USER_ASSIGNED_CLIENT_ID}"}),": ",(0,t.jsx)(n.code,{children:"Client ID"})," of the user-assigned managed identity."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${KEYVAULT_NAME}"}),": the name of your Azure Key Vault."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${IDENTITY_TENANT}"}),": ",(0,t.jsx)(n.code,{children:"Tenant ID"})," for your Azure Active Directory."]}),"\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.code,{children:"${SECRET_NAME}"}),": the Kubernetes secret name."]}),"\n"]}),"\n",(0,t.jsx)(n.h4,{id:"step-2-reference-kubernetes-secret-1",children:"Step 2: Reference Kubernetes Secret"}),"\n",(0,t.jsx)(n.p,{children:"Reference Kubernetes Secret in the DIAL Core configuration:"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{className:"language-yaml",children:'core:\n\n  configuration:\n    encryption:\n      existingSecret: "${SECRET_NAME}"\n\n  extraVolumes:\n    - name: secrets\n      csi:\n        driver: secrets-store.csi.k8s.io\n        readOnly: true\n        volumeAttributes:\n          secretProviderClass: "${NAME}"\n  extraVolumeMounts:\n    - name: secrets\n      readOnly: true\n      mountPath: /mnt/secrets-store/dial-core-encryption\n'})})]})}function u(e={}){const{wrapper:n}={...(0,s.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},1151:(e,n,r)=>{r.d(n,{Z:()=>o,a:()=>i});var t=r(7294);const s={},c=t.createContext(s);function i(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);