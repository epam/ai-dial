"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[9567],{98503:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>o,contentTitle:()=>n,default:()=>h,frontMatter:()=>c,metadata:()=>a,toc:()=>l});var t=i(85893),r=i(11151);const c={},n="Access Control in DIAL",a={id:"platform/core/access-control-intro",title:"Access Control in DIAL",description:"Introduction",source:"@site/docs/platform/3.core/2.access-control-intro.md",sourceDirName:"platform/3.core",slug:"/platform/core/access-control-intro",permalink:"/platform/core/access-control-intro",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"DIAL Core",permalink:"/platform/core/about-core"},next:{title:"Per-Request Keys",permalink:"/platform/core/per-request-keys"}},o={},l=[{value:"Introduction",id:"introduction",level:2},{value:"Objects",id:"objects",level:2},{value:"DIAL Chat UI and DIAL Admin Panel",id:"dial-chat-ui-and-dial-admin-panel",level:3},{value:"Subjects",id:"subjects",level:2},{value:"Roles as Subjects",id:"roles-as-subjects",level:3},{value:"Default roles",id:"default-roles",level:4},{value:"How to associate a user or API key with a role",id:"how-to-associate-a-user-or-api-key-with-a-role",level:4},{value:"Authorization Rules",id:"authorization-rules",level:2},{value:"Authorization Mechanisms",id:"authorization-mechanisms",level:2},{value:"Default Authorization Rules: Public and Private Spaces",id:"default-authorization-rules-public-and-private-spaces",level:3},{value:"Pre-configured objects",id:"pre-configured-objects",level:4},{value:"Runtime objects",id:"runtime-objects",level:4},{value:"Hierarchical Structure of the Public Space",id:"hierarchical-structure-of-the-public-space",level:2},{value:"How to Restrict Access in the Public Space",id:"how-to-restrict-access-in-the-public-space",level:2},{value:"Pre-Configured Objects",id:"pre-configured-objects-1",level:3},{value:"Runtime Objects",id:"runtime-objects-1",level:3},{value:"How to Provide Access in the Private Space",id:"how-to-provide-access-in-the-private-space",level:2},{value:"Pre-Configured Objects",id:"pre-configured-objects-2",level:3},{value:"Runtime Objects",id:"runtime-objects-2",level:3},{value:"Special Subject: DIAL Application Acting on User\u2019s Behalf",id:"special-subject-dial-application-acting-on-users-behalf",level:2},{value:"Appendix",id:"appendix",level:2},{value:"Access Control List (ACL) in DIAL Core",id:"access-control-list-acl-in-dial-core",level:3},{value:"Access patterns, used in ACL tables",id:"access-patterns-used-in-acl-tables",level:4},{value:"ACLs for Objects",id:"acls-for-objects",level:4},{value:"ACLs for Special Objects",id:"acls-for-special-objects",level:4},{value:"ACLs for Core APIs, not related to Objects",id:"acls-for-core-apis-not-related-to-objects",level:4}];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",em:"em",h1:"h1",h2:"h2",h3:"h3",h4:"h4",img:"img",li:"li",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,r.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.h1,{id:"access-control-in-dial",children:"Access Control in DIAL"}),"\n",(0,t.jsx)(s.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(s.p,{children:["This article describes authorization in DIAL. Authorization rules can usually be defined by specifying ",(0,t.jsx)(s.strong,{children:"Object"})," of access (what we protect?), ",(0,t.jsx)(s.strong,{children:"Subject"})," of access (who we give access to?) and ",(0,t.jsx)(s.strong,{children:"Action"})," (what kind of access is given). This article follows this principle for better structuring: it defines Objects, Subjects, authorization rules and mechanisms, how these rules are managed in DIAL."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:i(12100).Z+"",width:"1463",height:"543"})}),"\n",(0,t.jsx)(s.h2,{id:"objects",children:"Objects"}),"\n",(0,t.jsxs)(s.p,{children:["In DIAL, ",(0,t.jsx)(s.strong,{children:"Objects"})," refer to entities accessible by users. These include Models, Applications, Toolsets, Files, Prompts, and Conversations. A complete list is provided in the summary table in the ",(0,t.jsx)(s.a,{href:"#appendix",children:"Appendix"}),"."]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note"}),": In DIAL documentation, the term ",(0,t.jsx)(s.em,{children:"Resources"})," may be used as a synonym for Objects. However, in this article, we will use the term Objects to emphasize their role in authorization rules."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Technically, ",(0,t.jsx)(s.a,{href:"/platform/core/about-core",children:"DIAL Core"})," manages all objects, handling persistence and associated business logic."]}),"\n",(0,t.jsx)(s.p,{children:"On a low level, objects can be defined in two ways:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:['Declaratively via configuration files. For brevity, in this document, we use the term \u201cpre-configured objects\u201d for objects defined in configuration files. All such objects belong to so-called "dynamic settings" of DIAL Core and can be updated in the configuration files and applied without restarting DIAL Core services. They are immutable via API. Refer to ',(0,t.jsx)(s.a,{href:"/tutorials/devops/configuration/configuration-guide#dynamic-settings",children:"Tutorials"})," to learn how to configure dynamic setting for DIAL Core."]}),"\n",(0,t.jsxs)(s.li,{children:["Through the ",(0,t.jsx)(s.a,{href:"/platform/core/about-core#unified-api",children:"Unified APIs"}),". We use the term \u201cruntime objects\u201d for such objects."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"This dual approach to managing objects provides users freedom to choose a configuration strategy based on their business case. For example, centralized management via configuration files is suitable for setups where the DIAL administration team prefers to leverage an Infrastructure as Code approach, whereas the API is suitable for situations where objects should be created by regular users. A combination of both approaches is also fully supported."}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note"}),": There are objects which can be defined only via configuration files and do not have APIs, and vice versa."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:i(90695).Z+"",width:"1435",height:"968"})}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["For general configuration guidelines, refer to ",(0,t.jsx)(s.a,{href:"/tutorials/devops/configuration/configuration-guide#general-method-of-configuration",children:"Configuration Guide"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["For details about DIAL Core dynamic settings, please refer to ",(0,t.jsx)(s.a,{href:"/tutorials/devops/configuration/configuration-guide#dynamic-settings",children:"Tutorials"}),"."]}),"\n",(0,t.jsxs)(s.li,{children:["DIAL Core API reference is available on the ",(0,t.jsx)(s.a,{href:"https://dialx.ai/dial_api",children:"DIALX landing website"}),"."]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"dial-chat-ui-and-dial-admin-panel",children:"DIAL Chat UI and DIAL Admin Panel"}),"\n",(0,t.jsx)(s.p,{children:"While DIAL Core is responsible for managing objects via configuration files and APIs, DIAL also provides the following UI tools to manage objects:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"/platform/chat/about-chat",children:"DIAL Chat UI"}),": Allows users to work with runtime objects via API."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.a,{href:"/platform/admin-panel",children:"DIAL Admin Panel"}),": Allows admin users to work with pre-configured objects."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Both applications work on top of DIAL Core and rely on DIAL Core\u2019s access control mechanisms, which is why this article focuses on DIAL Core authorization."}),"\n",(0,t.jsx)(s.h2,{id:"subjects",children:"Subjects"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Subjects"})," are actors who access ",(0,t.jsx)(s.strong,{children:"Objects"}),", trying to create, update, delete, read, or use them."]}),"\n",(0,t.jsx)(s.p,{children:"In DIAL, subjects include end-users, API Keys (used by external applications), or DIAL Applications, acting on a user's behalf."}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"End-users"})," authenticate in DIAL Core using JWT access tokens."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"API Keys"})," are used by external applications to access DIAL Core without user context."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"DIAL Applications"})," use internally-generated ",(0,t.jsx)(s.a,{href:"/platform/core/per-request-keys",children:"Per-Request Keys"})," that include information about both the application and the user. In this case on one hand, a DIAL Application acts on behalf of a user (who has certain permissions), but on the other hand, DIAL Applications are not fully trusted and should be limited in what they can do. This scenario is covered in a ",(0,t.jsx)(s.a,{href:"#special-subject-dial-application-acting-on-users-behalf",children:"separate section"})," of this article."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"roles-as-subjects",children:"Roles as Subjects"}),"\n",(0,t.jsxs)(s.p,{children:["DIAL also supports the notion of ",(0,t.jsx)(s.strong,{children:"Roles"})," to avoid managing access individually for every user or API Key."]}),"\n",(0,t.jsx)(s.p,{children:"A role can be associated with multiple individual Subjects, such as Users, User Groups and API Keys, and then used as a Subject to prove access to Objects in specific scenarios."}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note"}),": A role can only be defined via ",(0,t.jsx)(s.a,{href:"https://github.com/epam/ai-dial-core/blob/development/docs/dynamic-settings/roles.md",children:"DIAL Core configuration files"})," (pre-configured object) and not via Core API."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:i(89682).Z+"",width:"1444",height:"606"})}),"\n",(0,t.jsx)(s.h4,{id:"default-roles",children:"Default roles"}),"\n",(0,t.jsx)(s.p,{children:"By default, DIAL defines one dedicated role - DIAL Administrators - which has elevated access over DIAL configuration (dynamic settings) and Core API:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsx)(s.li,{children:"DIAL Administrators can command DIAL Core to reload \u201cdynamic settings\u201d configuration files without restarting DIAL Core services."}),"\n",(0,t.jsx)(s.li,{children:"DIAL Administrators have access to certain DIAL Core APIs and Objects that other Subjects cannot access."}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"More details on DIAL Administrators role can be found in the sections below, describing DIAL Authorization rules."}),"\n",(0,t.jsx)(s.h4,{id:"how-to-associate-a-user-or-api-key-with-a-role",children:"How to associate a user or API key with a role"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"User"})," (JWT Token): A User is represented by a JWT token issued by an identity service provider (IDP) and mapped to the roles using claim values in the token. Refer to ",(0,t.jsx)(s.a,{href:"/tutorials/devops/auth-and-access-control/jwt",children:"Tutorials"})," to learn how it works."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"API Key"}),": An API Key can be defined only in the ",(0,t.jsx)(s.a,{href:"https://github.com/epam/ai-dial-core/blob/development/docs/dynamic-settings/keys.md",children:"DIAL Core configuration file"}),' and must include a "roles" attribute specifying the roles assigned to the key. For more details, refer to ',(0,t.jsx)(s.a,{href:"/tutorials/devops/auth-and-access-control/api-keys",children:"Programmatic Auth"}),"."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"authorization-rules",children:"Authorization Rules"}),"\n",(0,t.jsxs)(s.p,{children:["In this article we use the following logical notation for the Authorization Rule, allowing access for a ",(0,t.jsx)(s.code,{children:"{set-of-subjects}"})," to a ",(0,t.jsx)(s.code,{children:"{set-of-objects}"}),":"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"(object: {set-of-objects}, subject: {set-of-subjects}, action: {actions}) "})}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note"}),": This notation is not how DIAL stores or interprets authorization rules. It was made up for the purpose of this article, for the sake of unification and brevity."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"authorization-mechanisms",children:"Authorization Mechanisms"}),"\n",(0,t.jsxs)(s.p,{children:["DIAL uses various mechanisms to maintain and enforce authorization rules in different business scenarios. They include ",(0,t.jsx)(s.strong,{children:"Public"})," and ",(0,t.jsx)(s.strong,{children:"Private"})," spaces, publication and objects sharing, which will be described in the following sections."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:i(56031).Z+"",width:"1362",height:"1115"})}),"\n",(0,t.jsx)(s.h3,{id:"default-authorization-rules-public-and-private-spaces",children:"Default Authorization Rules: Public and Private Spaces"}),"\n",(0,t.jsxs)(s.p,{children:["DIAL supports two logical spaces for all objects: ",(0,t.jsx)(s.strong,{children:"Public"})," and ",(0,t.jsx)(s.strong,{children:"Private"}),". Every object belongs to only one of the spaces."]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.strong,{children:"Public"})," space allows making objects available to a wide audience while maintaining full control and governance."]}),"\n",(0,t.jsxs)(s.li,{children:["The ",(0,t.jsx)(s.strong,{children:"Private"})," space assumes objects are available only to their creators (owners) by default. This allows regular users to work with DIAL without compromising their privacy, as the objects they create cannot be accessed by anyone else unless explicitly stated (will be described ",(0,t.jsx)(s.a,{href:"#how-to-provide-access-in-the-private-space",children:"further in text"}),")."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["As their names assume, the two spaces define default ",(0,t.jsx)(s.a,{href:"#authorization-rules",children:"authorization rules"}),", applied to their resources (Objects):"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Any Object in a Public space is available in READ-ONLY mode for any user by default, unless access is restricted as shown ",(0,t.jsx)(s.a,{href:"#how-to-restrict-access-in-the-public-space",children:"further in the article"}),"; WRITE operations are allowed only for the role of DIAL Administrators. Default authorization rules in Public space are:"]}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"(object: public:*, subject: *, action: read)"})," - Default READ-ONLY access in Public space."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"(object: public:*, subject: role:admin, action: *)"})," - Default full access for users with the DIAL Administrators role in Public space."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"Where:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"public:*"})," - A wildcard for any Object in the Public space."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"subject: *"})," - A wildcard for any Subject."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"role:admin"}),' \u2013 A notation for all Subjects, belonging to "admin" role. We use the "admin" name for the DIAL Administrators role. As was mentioned earlier, ',(0,t.jsx)(s.a,{href:"#roles-as-subjects",children:"roles can be used as Subjects"})," in the definition of authorization rules."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:["\n",(0,t.jsxs)(s.p,{children:["Any Object in a Private space is available only to its creator (User, API Key) by default, unless access is ",(0,t.jsx)(s.a,{href:"#how-to-provide-access-in-the-private-space",children:"explicitly granted"})," to another Subject. Logically, every Subject (user or API Key) has its own Private space. The default authorization rule in the Private space is: ",(0,t.jsx)(s.code,{children:"(object: private:subject_id:*, subject: subject_id, action:*)"})]}),"\n",(0,t.jsx)(s.p,{children:"Where:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"private:subject_id:*"})," - Any Object in a Private space of a particular Subject (User or API Key), identified by ",(0,t.jsx)(s.code,{children:'"subject_id"'}),"."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"subject_id"})," - A unique identifier of a Subject (user or API Key)."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"pre-configured-objects",children:"Pre-configured objects"}),"\n",(0,t.jsx)(s.p,{children:"All objects, defined in DIAL Core configuration files, belong to the Public space, where appropriate default Authorization rules apply."}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note"}),": Objects cannot be defines in a Private space via DIAL Core configuration files."]}),"\n"]}),"\n",(0,t.jsx)(s.h4,{id:"runtime-objects",children:"Runtime objects"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.a,{href:"https://dialx.ai/dial_api",children:"DIAL Core API"})," allows creating Objects in both Public and Private spaces. As default authorization rules define, an Object in a Public space can only be created by the DIAL Administrators role, while regular users (including user from DIAL Administrators role) or API Keys can create Objects only within their Private space."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:i(92585).Z+"",width:"1452",height:"945"})}),"\n",(0,t.jsx)(s.h2,{id:"hierarchical-structure-of-the-public-space",children:"Hierarchical Structure of the Public Space"}),"\n",(0,t.jsx)(s.p,{children:"This section provides details about how the Public space is structured, which is important for understanding of authorization rules."}),"\n",(0,t.jsx)(s.p,{children:"Objects in the Public space are arranged hierarchically, like a file system. This means that every object logically belongs to a  \u201csub-folder\u201d within the hierarchy. All pre-configured objects are automatically placed into the \u201croot\u201d folder of the Public space. DIAL Core API allows specifying a sub-folder for newly-created objects."}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:i(63888).Z+"",width:"1567",height:"1225"})}),"\n",(0,t.jsx)(s.p,{children:"As you will see below, authorization restrictions can be applied to any sub-folder in the hierarchy. The effective authorization rule for an object in a sub-folder includes restrictions applied to all parent sub-folders up to the \u201croot\u201d folder."}),"\n",(0,t.jsx)(s.h2,{id:"how-to-restrict-access-in-the-public-space",children:"How to Restrict Access in the Public Space"}),"\n",(0,t.jsx)(s.p,{children:"Default public access to objects in the Public space can be narrowed/restricted as needed."}),"\n",(0,t.jsx)(s.h3,{id:"pre-configured-objects-1",children:"Pre-Configured Objects"}),"\n",(0,t.jsxs)(s.p,{children:["You can use the ",(0,t.jsx)(s.code,{children:'"userRoles"'})," attribute in the object's definition in the DIAL Core dynamic settings to list all roles that should have access to the object. Refer to ",(0,t.jsx)(s.a,{href:"/tutorials/devops/auth-and-access-control/jwt",children:"Tutorials"})," to learn how to do it. It creates the following authorization rule that overrides the default public READ-ONLY access:"]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"(object: public:object_id, subject: role:{list-of-roles-via-OR}, action: read)"})}),"\n",(0,t.jsx)(s.p,{children:"Where:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"public:object_id"})," \u2013 A particular object in the Public space (in our case, defined in the DIAL Core configuration file)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"role:{list-of-roles-via-OR}"})," \u2013 Any user or API key that belong to any role (Role1 OR Role2 OR\u2026OR RoleN), specified in ",(0,t.jsx)(s.code,{children:'"userRoles"'})," attribute of the object definition in the DIAL Core configuration file."]}),"\n"]}),"\n",(0,t.jsx)(s.h3,{id:"runtime-objects-1",children:"Runtime Objects"}),"\n",(0,t.jsx)(s.p,{children:"As mentioned above, for Runtime objects, the Public space supports hierarchical structure, similar to a file system. Objects can be placed (or published) to the root folder or any sub-folder within this hierarchy."}),"\n",(0,t.jsxs)(s.p,{children:["Each sub-folder (with the exception of the root folder) can be assigned one or many attribute-based logical predicates, describing Subjects that need access to this sub-folder. These predicates are called ",(0,t.jsx)(s.code,{children:'"rules"'}),". E.g. ",(0,t.jsx)(s.code,{children:"\u201cgroup == my-role\u201d"}),"."]}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.img,{src:i(8444).Z+"",width:"1563",height:"887"})}),"\n",(0,t.jsx)(s.p,{children:"The effective set of rules for each sub-folder includes all rules associated with the sub-folder (via OR) and all the rules inherited from the parent sub-folders (via AND). The final authorization rule for objects in a sub-folder:"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"(object: public:sub_folder_path:*, subject: {effective-set-of-rules}, action: read)"})}),"\n",(0,t.jsx)(s.p,{children:"Where:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"public:sub_folder_path:*"})," - Any object in the sub-folder of the Public space."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"{effective-set-of-rules}"})," \u2013 A logical expression, combining all rules from the parent sub-folders (via AND), with each sub-folder rule being a set of predicates joined by OR."]}),"\n"]}),"\n",(0,t.jsxs)(s.p,{children:["Rules associated with sub-folders can be created by either DIAL Administrators or regular users during the ",(0,t.jsx)(s.a,{href:"/tutorials/developers/work-with-resources/work-with-publications",children:"Publication process"}),"."]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"Note"}),": Publication is the only way for regular users to add objects to the Public space, which requires an explicit approval from DIAL Administrators."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"how-to-provide-access-in-the-private-space",children:"How to Provide Access in the Private Space"}),"\n",(0,t.jsx)(s.p,{children:"Default access, limited by the Private space\u2019s owner, can be extended as needed."}),"\n",(0,t.jsx)(s.h3,{id:"pre-configured-objects-2",children:"Pre-Configured Objects"}),"\n",(0,t.jsxs)(s.p,{children:[(0,t.jsx)(s.strong,{children:"N/A"})," - As was mentioned earlier in this article, objects defined in DIAL Core configuration files are placed only in the Public space."]}),"\n",(0,t.jsx)(s.h3,{id:"runtime-objects-2",children:"Runtime Objects"}),"\n",(0,t.jsxs)(s.p,{children:["As discussed earlier, by default, only the object's creator (e.g. Private space\u2019s owner) maintains full access to the object in the Private space. The object's creator may want to provide access to other users. In this case, they can generate a temporary ",(0,t.jsx)(s.strong,{children:"Sharing link"})," for the object, specifying the kind of access required (READ or READ/WRITE). The link can be sent to any DIAL user."]}),"\n",(0,t.jsxs)(s.blockquote,{children:["\n",(0,t.jsxs)(s.p,{children:["Refer to ",(0,t.jsx)(s.a,{href:"/tutorials/developers/work-with-resources/sharing",children:"Sharing"})," for details."]}),"\n"]}),"\n",(0,t.jsx)(s.p,{children:"When the sharing link is used, the following authorization rule is created:"}),"\n",(0,t.jsx)(s.p,{children:(0,t.jsx)(s.code,{children:"(object: private:subject_id:object_id, subject: {user-id-who-used-the-link}, action: {action-specified-by-the-link})"})}),"\n",(0,t.jsx)(s.p,{children:"Where:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"Private:subject_id:object_id"})," \u2013 A particular object in a Private space of the particular subject (User or API Key)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"{user-id-who-used-the-link}"})," \u2013 A particular user who activated the link (accepted invite)."]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"{action-specified-by-the-link}"})," \u2013 READ or READ/WRITE type of permissions, specified by object's creator while creating the Sharing link."]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"special-subject-dial-application-acting-on-users-behalf",children:"Special Subject: DIAL Application Acting on User\u2019s Behalf"}),"\n",(0,t.jsx)(s.p,{children:"In the preceding sections, we examined authorization rules applicable to standard subjects, such as users and API keys. We reviewed the default access privileges in both Public and Private spaces, as well as methods for refining or extending these permissions as required."}),"\n",(0,t.jsxs)(s.p,{children:["There is a special case when user or API key allows DIAL Applications to act on their behalf. For example, a user invokes a DIAL Application A, which calls DIAL Core services (e.g. File API), another Application B or a Model M. In such case, the application uses a so called ",(0,t.jsx)(s.a,{href:"/platform/core/per-request-keys",children:"per-request key"}),", that contains information about both Application A and the User (or API Key)."]}),"\n",(0,t.jsx)(s.p,{children:"Logically, since Applications act as a user, they should have the same level of access in DIAL. However, since applications in DIAL are also Objects, and can be created and deployed by any user, they can potentially contain malicious code and cannot be fully trusted. It means that their access should be minimized to reduce potential negative impact."}),"\n",(0,t.jsx)(s.p,{children:"Because a per-request key represents both User and Application, it has access to both user\u2019s and application\u2019s objects. Applications in DIAL also have their Private space, where an application (acting via a per-request key) can store and, later, access its objects."}),"\n",(0,t.jsx)(s.p,{children:"Below, is the summary of what a DIAL application, acting on behalf of a user or API key via a per-request key, can access in DIAL:"}),"\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"Objects in a dedicated sub-folder"}),": Usually, users or API keys can access all objects in their Private space without restrictions. A per-request key for the same user or API key has access to only application\u2019s dedicated sub-folder within user\u2019s or API key's Private space:","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"(object: private:subject_id:app_id:*, subject: per-request-key, action: READ/WRITE)"}),", where ",(0,t.jsx)(s.code,{children:"private:subject_id:app_id:*"})," is any object in application-dedicated (",(0,t.jsx)(s.code,{children:"app_id"}),") sub-folder within user's or API key\u2019s (subject_id) Private space."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.strong,{children:"All objects in the app's Private space"}),": Apps can access all objects in their own Private space (note, that a per-request key of any user has access to the application\u2019s private space):","\n",(0,t.jsxs)(s.ul,{children:["\n",(0,t.jsxs)(s.li,{children:[(0,t.jsx)(s.code,{children:"(object: private:app_id:*, subject: per-request-key, action: READ/WRITE)"}),", where ",(0,t.jsx)(s.code,{children:"private:app_id:*"})," is any object in application\u2019s Private space."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(s.h2,{id:"appendix",children:"Appendix"}),"\n",(0,t.jsx)(s.h3,{id:"access-control-list-acl-in-dial-core",children:"Access Control List (ACL) in DIAL Core"}),"\n",(0,t.jsx)(s.h4,{id:"access-patterns-used-in-acl-tables",children:"Access patterns, used in ACL tables"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Space"}),(0,t.jsx)(s.th,{children:"Access Pattern"}),(0,t.jsx)(s.th,{children:"Description"})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Public space"})}),(0,t.jsx)(s.td,{children:"Public objects"}),(0,t.jsxs)(s.td,{children:["READ-ONLY access to public objects without restrictions.",(0,t.jsx)("br",{}),"For \u201cexecutable objects,\u201d such as Applications, Routes, or Toolsets, it also includes \u201cexecute\u201d or \u201ccall\u201d permissions."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Restricted objects"}),(0,t.jsx)(s.td,{children:"READ-ONLY access to objects with matching Rules."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Admin access"}),(0,t.jsxs)(s.td,{children:["\u2022 Full READ/WRITE access to any object in Public space.",(0,t.jsx)("br",{})," \u2022 DIAL Core configuration files are managed by DIAL Administrators.",(0,t.jsx)("br",{})," \u2022 Approve/Reject publication requests."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Private space"})}),(0,t.jsx)(s.td,{children:"Own objects"}),(0,t.jsxs)(s.td,{children:["\u2022 Full READ/WRITE access to any object in own Private space.",(0,t.jsx)("br",{})," \u2022 Submit publication requests for objects.",(0,t.jsx)("br",{})," \u2022 Create sharing links (share) for objects."]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Own objects per application"}),(0,t.jsx)(s.td,{children:"Full access to any object in application-specific sub-folder in own Private space."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Application objects"}),(0,t.jsx)(s.td,{children:"Full access to any object in application\u2019s Private space."})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{children:"Shared objects"}),(0,t.jsxs)(s.td,{children:["Access to the shared object, level of access is defined in the sharing link:",(0,t.jsx)("br",{})," \u2022 READ",(0,t.jsx)("br",{})," \u2022 READ/WRITE",(0,t.jsx)("br",{})," \u2022 Optionally RE-SHARE (in combination with read or READ/WRITE)."]})]})]})]}),"\n",(0,t.jsx)(s.h4,{id:"acls-for-objects",children:"ACLs for Objects"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Object"}),(0,t.jsx)(s.th,{children:"DIAL Admin"}),(0,t.jsx)(s.th,{children:"User w/o Role"}),(0,t.jsx)(s.th,{children:"User / API Key w/Role(s)"}),(0,t.jsxs)(s.th,{children:["Per-request Key ",(0,t.jsx)("br",{}),"Note: does not apply for admins"]})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.strong,{children:"Models"}),(0,t.jsx)("br",{}),"Note: Models are managed",(0,t.jsx)("br",{}),"only via ",(0,t.jsx)("br",{}),"DIAL Core configuration files."]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Admin access",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 N/A"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 N/A"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 N/A"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 N/A"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Applications"})}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Admin access",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects per application",(0,t.jsx)("br",{}),"\u2022 Application objects"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Toolsets"})}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Admin access",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects per application",(0,t.jsx)("br",{}),"\u2022 Application objects"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.strong,{children:"Routes"}),(0,t.jsx)("br",{}),"Note: Routes are managed",(0,t.jsx)("br",{}),"only via configuration files"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Admin access",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 N/A"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 N/A"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 N/A"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 N/A"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Files"})}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Admin access",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects per application",(0,t.jsx)("br",{}),"\u2022 Application objects"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Prompts"})}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Admin access",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects per application",(0,t.jsx)("br",{}),"\u2022 Application objects"]})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.strong,{children:"Conversations"})}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Admin access",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects",(0,t.jsx)("br",{}),"\u2022 Shared objects"]}),(0,t.jsxs)(s.td,{children:["Public space: ",(0,t.jsx)("br",{}),"\u2022 Public objects",(0,t.jsx)("br",{}),"\u2022 Restricted objects",(0,t.jsx)("br",{}),"Private space: ",(0,t.jsx)("br",{}),"\u2022 Own objects per application",(0,t.jsx)("br",{}),"\u2022 Application objects"]})]})]})]}),"\n",(0,t.jsx)(s.h4,{id:"acls-for-special-objects",children:"ACLs for Special Objects"}),"\n",(0,t.jsx)(s.p,{children:"Special Objects represent a part of DIAL\u2019s authorization system and do not belong to Public or Private spaces."}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Object"}),(0,t.jsx)(s.th,{children:"DIAL Administrator"}),(0,t.jsx)(s.th,{children:"User w/o Role"}),(0,t.jsx)(s.th,{children:"User / API Key w/Role(s)"}),(0,t.jsxs)(s.th,{children:["Per-request Key ",(0,t.jsx)("br",{}),"Note: does not apply for admins"]})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.strong,{children:"Keys"}),(0,t.jsx)("br",{}),"Note: API keys are managed",(0,t.jsx)("br",{}),"only via DIAL Core configuration files. ",(0,t.jsx)("br",{}),"Keys cannot be listed or otherwise accessed via API, even in READ-ONLY mode.",(0,t.jsx)("br",{}),"User can make a call to ",(0,t.jsx)(s.a,{href:"https://dialx.ai/dial_api#operation/getUserInfo",children:"/v1/user/info"}),", authenticated by an API Key, to obtain a limited information about the API Key"]}),(0,t.jsx)(s.td,{children:"+"}),(0,t.jsx)(s.td,{children:"-"}),(0,t.jsx)(s.td,{children:"-"}),(0,t.jsx)(s.td,{children:"-"})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsxs)(s.td,{children:[(0,t.jsx)(s.strong,{children:"Roles"}),(0,t.jsx)("br",{}),"Note: Roles are managed only via configuration files.",(0,t.jsx)("br",{})," Roles cannot be listed or otherwise accessed via DIAL Core API, even in READ-ONLY mode"]}),(0,t.jsx)(s.td,{children:"+"}),(0,t.jsx)(s.td,{children:"-"}),(0,t.jsx)(s.td,{children:"-"}),(0,t.jsx)(s.td,{children:"-"})]})]})]}),"\n",(0,t.jsx)(s.h4,{id:"acls-for-core-apis-not-related-to-objects",children:"ACLs for Core APIs, not related to Objects"}),"\n",(0,t.jsxs)(s.table,{children:[(0,t.jsx)(s.thead,{children:(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.th,{children:"Core API"}),(0,t.jsx)(s.th,{children:"DIAL Administrator"}),(0,t.jsx)(s.th,{children:"User w/o Role"}),(0,t.jsx)(s.th,{children:"User / API Key w/Role(s)"}),(0,t.jsxs)(s.th,{children:["Per-request Key ",(0,t.jsx)("br",{}),"  Note: does not apply for admins"]})]})}),(0,t.jsxs)(s.tbody,{children:[(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://dialx.ai/dial_api#operation/getUserInfo",children:"Get User Info"})}),(0,t.jsx)(s.td,{children:"Information about current user"}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{}),(0,t.jsx)(s.td,{})]}),(0,t.jsxs)(s.tr,{children:[(0,t.jsx)(s.td,{children:(0,t.jsx)(s.a,{href:"https://dialx.ai/dial_api#tag/Config/operation/reloadConfig",children:"Reload DIAL Core Config"})}),(0,t.jsx)(s.td,{children:"+"}),(0,t.jsx)(s.td,{children:"-"}),(0,t.jsx)(s.td,{children:"-"}),(0,t.jsx)(s.td,{children:"-"})]})]})]})]})}function h(e={}){const{wrapper:s}={...(0,r.a)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},12100:(e,s,i)=>{i.d(s,{Z:()=>t});const t=i.p+"assets/images/acl1-011db04130d08d5dc63381f5e13467b9.png"},90695:(e,s,i)=>{i.d(s,{Z:()=>t});const t=i.p+"assets/images/acl2-8aba22f788ea60429e4a8e8b07e61365.png"},89682:(e,s,i)=>{i.d(s,{Z:()=>t});const t=i.p+"assets/images/acl3-0be45cf82be7f1752af9ca84aa9ea328.png"},56031:(e,s,i)=>{i.d(s,{Z:()=>t});const t=i.p+"assets/images/acl4-16e1004957a6d2d1f4c2d9b00df799e6.png"},92585:(e,s,i)=>{i.d(s,{Z:()=>t});const t=i.p+"assets/images/acl5-8465c94bb9f7af3e75e412dd2cb2f701.png"},63888:(e,s,i)=>{i.d(s,{Z:()=>t});const t=i.p+"assets/images/acl6-b1f9086c578daebf875551a799b3e73e.png"},8444:(e,s,i)=>{i.d(s,{Z:()=>t});const t=i.p+"assets/images/acl7-6ba2c2669d23e3881c19ce0f44eaf685.png"},11151:(e,s,i)=>{i.d(s,{Z:()=>a,a:()=>n});var t=i(67294);const r={},c=t.createContext(r);function n(e){const s=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:n(e.components),t.createElement(c.Provider,{value:s},e.children)}}}]);