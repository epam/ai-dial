"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[211],{25771:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>r,toc:()=>l});var n=a(85893),t=a(11151);const s={},o="How to Enable Apps in DIAL",r={id:"tutorials/developers/apps-development/enable-app",title:"How to Enable Apps in DIAL",description:"Introduction",source:"@site/docs/tutorials/1.developers/4.apps-development/3.enable-app.md",sourceDirName:"tutorials/1.developers/4.apps-development",slug:"/tutorials/developers/apps-development/enable-app",permalink:"/tutorials/developers/apps-development/enable-app",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"DIAL-to-DIAL Adapter",permalink:"/tutorials/developers/apps-development/adapter-dial"},next:{title:"Quick App Configuration Guide",permalink:"/tutorials/developers/apps-development/quick-app-configuration"}},c={},l=[{value:"Introduction",id:"introduction",level:2},{value:"DIAL-Native Applications",id:"dial-native-applications",level:2},{value:"Schema-rich applications",id:"schema-rich-applications",level:5},{value:"Applications without schemas",id:"applications-without-schemas",level:5},{value:"Enable Schema-Rich Applications",id:"enable-schema-rich-applications",level:2},{value:"Using API",id:"using-api",level:3},{value:"UI Wizard",id:"ui-wizard",level:4},{value:"Using DIAL Core Config",id:"using-dial-core-config",level:3},{value:"Enable Applications without Schemas",id:"enable-applications-without-schemas",level:2},{value:"Using API",id:"using-api-1",level:3},{value:"Using DIAL Core Config",id:"using-dial-core-config-1",level:3},{value:"Access Control",id:"access-control",level:2},{value:"DIAL Core Configuration",id:"dial-core-configuration",level:3},{value:"Example",id:"example",level:5},{value:"UI &amp; API",id:"ui--api",level:3},{value:"Access to Application Files",id:"access-to-application-files",level:3},{value:"For applications without schemas",id:"for-applications-without-schemas",level:5},{value:"For schema-rich applications",id:"for-schema-rich-applications",level:5},{value:"Enable NOT DIAL-Native Apps",id:"enable-not-dial-native-apps",level:2},{value:"Custom UIs",id:"custom-uis",level:5},{value:"Application Endpoint",id:"application-endpoint",level:5}];function p(e){const i={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h4:"h4",h5:"h5",img:"img",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,t.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"how-to-enable-apps-in-dial",children:"How to Enable Apps in DIAL"}),"\n",(0,n.jsx)(i.h2,{id:"introduction",children:"Introduction"}),"\n",(0,n.jsxs)(i.p,{children:["This document describes the process for enabling applications in DIAL to make them available for users. The development of applications are beyond the scope of this document. You can develop applications following ",(0,n.jsx)(i.a,{href:"https://dialx.ai/dial_api",children:"API"})," and ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-sdk",children:"SDK"}),"."]}),"\n",(0,n.jsx)(i.h2,{id:"dial-native-applications",children:"DIAL-Native Applications"}),"\n",(0,n.jsxs)(i.p,{children:["DIAL-native applications adhere to the ",(0,n.jsx)(i.a,{href:"https://dialx.ai/dial_api",children:"unified protocol"}),", a single protocol for all applications and models. This makes it possible for them to be used as building blocks in other apps. Refer to ",(0,n.jsx)(i.a,{href:"/platform/architecture-and-concepts/agentic-platform",children:"Agentic Platform"})," to learn more about agents in DIAL."]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["Refer to ",(0,n.jsx)(i.a,{href:"/platform/core/apps",children:"DIAL-Native Apps"})," to learn more."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"DIAL-native applications can be categorized as either schema-rich or apps without schemas:"}),"\n",(0,n.jsx)(i.h5,{id:"schema-rich-applications",children:"Schema-rich applications"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.a,{href:"#enable-schema-rich-applications",children:"Schema-rich applications"})," enable users to create instances of applications with different properties via ",(0,n.jsx)(i.a,{href:"https://dialx.ai/dial_api#tag/Applications/operation/saveCustomApplication",children:"DIAL Core API"}),". Unlike apps without schemas, where business logic properties are embedded in the application code or container environment and are difficult to change, schema-rich applications provide greater flexibility."]}),"\n",(0,n.jsxs)(i.p,{children:["Schema-rich applications are defined by a JSON schema that conforms to the main ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-core/blob/development/config/src/main/resources/custom-application-schemas/schema",children:"meta schema"}),". JSON schema describes the application's structure, including properties and endpoints (completion, configuration, and other), URLs for application editor (enabling a wizard in the UI for creating/editing applications) and custom application UI to replace the standard chat UI, ",(0,n.jsx)(i.a,{href:"/tutorials/developers/apps-development/custom-buttons",children:"custom buttons"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:["There is a method in ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-sdk",children:"DIAL SDK"})," (",(0,n.jsx)(i.code,{children:"application_properties = await request.request_dial_application_properties()"}),") that returns application properties with a configuration request to DIAL Core."]}),"\n",(0,n.jsxs)(i.p,{children:["Schema-rich applications are usually associated with a specific ",(0,n.jsx)(i.strong,{children:"Application Type"})," - a template for creating applications of that type."]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{src:a(16026).Z+"",width:"1352",height:"282"})}),"\n",(0,n.jsxs)(i.p,{children:["\u2601\ufe0f"," DIAL SaaS edition includes application types such as Quick app, Code app and Mind Map."]}),"\n",(0,n.jsxs)(i.p,{children:["\ud83d\udcbe"," In self-hosted deployments of DIAL, you can add new application types, featuring custom application UI (",(0,n.jsx)(i.code,{children:"applicationTypeViewerUrl"}),") and wizards (",(0,n.jsx)(i.code,{children:"applicationTypeEditorUrl"}),") and enabling end-users to create applications of that type."]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["Refer to ",(0,n.jsx)(i.a,{href:"/platform/core/apps#application-types",children:"DIAL-Native Apps"})," to learn more about application types."]}),"\n"]}),"\n",(0,n.jsx)(i.h5,{id:"applications-without-schemas",children:"Applications without schemas"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.a,{href:"#enable-applications-without-schemas",children:"Applications without schemas"})," are not tied to any specific application type. When enabling such an app, you must explicitly specify (in the ",(0,n.jsx)(i.a,{href:"#using-api-1",children:"API PUT request"}),") standard parameters of the application and available endpoints the application offers. Properties that define the logic and behavior of the application are part of the application code and the container it runs in, meaning they cannot be modified through the DIAL Core API, contrary to schema-rich applications. For example, to enable two apps without schemas, you may need to launch two containers, whereas for schema-rich apps, you can make just two API calls."]}),"\n",(0,n.jsx)(i.h2,{id:"enable-schema-rich-applications",children:"Enable Schema-Rich Applications"}),"\n",(0,n.jsxs)(i.p,{children:["You can enable schema-rich apps either by using ",(0,n.jsx)(i.a,{href:"#using-api",children:"DIAL API"})," or by a ",(0,n.jsx)(i.a,{href:"#using-dial-core-config",children:"direct modification of the DIAL Core configuration"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Prerequisites"}),":"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"A schema of the application type must be included in the DIAL Core configuration."}),"\n",(0,n.jsx)(i.li,{children:"Having a running container for each application type. These containers must be accessible via the endpoints specified in the JSON schema for their respective application types."}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"using-api",children:"Using API"}),"\n",(0,n.jsx)(i.p,{children:"You can use the DIAL API to create a schema-rich application of a specific type."}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Important"}),": Apps enabled via the DIAL API, can be modified using API or UI wizards (if ",(0,n.jsx)(i.code,{children:"applicationTypeEditorUrl"})," is included in the schema)."]}),"\n",(0,n.jsxs)(i.p,{children:["Send a ",(0,n.jsx)(i.a,{href:"https://dialx.ai/dial_api#tag/Applications/operation/saveCustomApplication",children:"PUT"})," request to DIAL Core, where you provide:"]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["Standard parameters for the application (",(0,n.jsx)(i.code,{children:"displayName"}),", ",(0,n.jsx)(i.code,{children:"description"})," etc.). Refer to ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"dynamic setting of DIAL Core"})," to see all the supported parameters for applications."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"applicationTypeSchemaId"}),": The identifier of the schema for the application type you want to use as a template. You can retrieve available schemas via the ",(0,n.jsx)(i.a,{href:"https://rail-landing.staging.deltixhub.io/dial_api#tag/Applications/operation/listCustomApplicationSchemas",children:"GET Schemas"})," API call."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.code,{children:"applicationProperties"}),": A valid JSON object representing the application's structure, conforming to the specified schema. If the JSON object is invalid, the request will fail."]}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["If ",(0,n.jsx)(i.code,{children:"applicationTypeSchemaId"})," is absent or ",(0,n.jsx)(i.code,{children:"NULL"}),", ",(0,n.jsx)(i.code,{children:"applicationProperties"})," are not required. If ",(0,n.jsx)(i.code,{children:"applicationTypeSchemaId"})," is not provided, then this is not a schema-rich application."]}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["If ",(0,n.jsx)(i.code,{children:"applicationTypeSchemaId"})," is provided but ",(0,n.jsx)(i.code,{children:"applicationProperties"})," are ",(0,n.jsx)(i.code,{children:"NULL"}),', the application is considered a "stub" and can be updated later, but completion requests will not be possible until then.']}),"\n"]}),"\n",(0,n.jsxs)(i.li,{children:["\n",(0,n.jsxs)(i.p,{children:["For applications with schemas, all requests are routed ",(0,n.jsx)(i.strong,{children:"ONLY"})," to endpoints specified in the schema. If you specify endpoints in the ",(0,n.jsx)(i.a,{href:"https://dialx.ai/dial_api#tag/Applications/operation/saveCustomApplication",children:"PUT"})," request, such request will fail."]}),"\n",(0,n.jsx)(i.p,{children:"Example of a PUT request body:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:'{\n  "copilot_deck_app": {\n    "displayName": "Copilot Deck Explorer",\n    "description": "You can ask about the copilot deck there",\n    "applicationTypeSchemaId": "https://mydial.epam.com/custom_application_schemas/quickapps",\n    "applicationProperties": {\n      "temperature": 0.8,\n      "instructions": "Answer using only the information in the document.",\n      "model": "gpt-4o-2024-05-13",\n      "web_api_toolset": [],\n      "document_relative_url": "files/DpZGXdhaTxt4FYCWNadE2Ln/GPT%20Deck.docx"\n    }\n  }\n}\n'})}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["Refer to ",(0,n.jsx)(i.a,{href:"/tutorials/developers/apps-development/quick-app-configuration#complete-example",children:"Quick App Configuration Guide"})," to see a full configuration example for Quick app."]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsxs)(i.p,{children:["The configuration of the enabled app is saved as a BLOB in the DIAL Core file system with a JSON object that must correspond to the schema of a particular application type. This file is available vial the ",(0,n.jsx)(i.a,{href:"https://dialx.ai/dial_api#tag/Applications/operation/getCustomApplicationSchema",children:"DIAL API"}),", according to the defined ",(0,n.jsx)(i.a,{href:"/tutorials/developers/apps-development/auth-matrix",children:"Auth Matrix"})," for a specific application."]}),"\n",(0,n.jsx)(i.h4,{id:"ui-wizard",children:"UI Wizard"}),"\n",(0,n.jsxs)(i.p,{children:["JSON Schemas of application types can include ",(0,n.jsx)(i.code,{children:"applicationTypeEditorUrl"})," to enable a custom UI where users can create and edit applications."]}),"\n",(0,n.jsxs)(i.p,{children:["\u2601\ufe0f"," SaaS DIAL edition includes wizards for Quick app, Code app and Mind Map application types."]}),"\n",(0,n.jsxs)(i.p,{children:["\ud83d\udcbe"," Self-hosted deployment of DIAL gives you an opportunity to create custom wizards for your application types."]}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["Refer to ",(0,n.jsx)(i.a,{href:"/tutorials/user-guide#applications",children:"User guide"})," to learn how to create applications using wizards."]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"using-dial-core-config",children:"Using DIAL Core Config"}),"\n",(0,n.jsxs)(i.p,{children:["DIAL admins can create schema-rich applications by including a valid JSON object with the application representation in the ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"DIAL Core"})," configuration in the ",(0,n.jsx)(i.code,{children:"applications"})," section."]}),"\n",(0,n.jsx)(i.p,{children:"Example of dynamic settings in DIAL Core:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:' "applications":\n    "copilot_deck_app": {\n      "displayName": "Copilot Deck Explorer",\n      "description": "You can ask about the copilot deck there",\n      "applicationTypeSchemaId": "https://mydial.epam.com/custom_application_schemas/quickapps",\n      "applicationProperties": {\n        "temperature": 0.8,\n        "instructions": "Answer using only the information in the document.",\n        "model": "gpt-4o-2024-05-13",\n        "web_api_toolset": [],\n        "document_relative_url": ["files/DpZGXdFYCWNadE2Ln/GPT%20Deck%20text.docx"]\n      }\n    }\n'})}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Important"}),": Apps added through direct modification of the DIAL Core configuration are immutable and cannot be edited via the UI or API, including by administrators. These apps are owned by the DIAL admin and are ideal for use cases where the app is configured once and remains unchanged, becoming available to users with corresponding roles and permissions."]}),"\n",(0,n.jsx)(i.h2,{id:"enable-applications-without-schemas",children:"Enable Applications without Schemas"}),"\n",(0,n.jsx)(i.p,{children:"Applications without schemas, unlike schema-rich apps, are not tied to a specific application type and their business logic cannot be defined through properties in a JSON schema."}),"\n",(0,n.jsxs)(i.p,{children:["To enable such an app in DIAL, you can add its representation in JSON format directly into the ",(0,n.jsx)(i.a,{href:"#using-dial-core-config-1",children:"DIAL Core config"})," or make an ",(0,n.jsx)(i.a,{href:"#using-api-1",children:"API request"})," where you provide all application endpoints and standard parameters - refer to ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"dynamic setting of DIAL Core"})," to see all the supported parameters for ",(0,n.jsx)(i.code,{children:"applications"}),"."]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Prerequisite"}),": You must have a running container with your app accessible for DIAL Core via the endpoints you provide in the ",(0,n.jsx)(i.a,{href:"#using-api-1",children:"PUT request"}),"."]}),"\n",(0,n.jsx)(i.h3,{id:"using-api-1",children:"Using API"}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Important"}),": Apps enabled via the DIAL API, can be modified using API or UI wizards, provided the corresponding permissions are enabled."]}),"\n",(0,n.jsxs)(i.p,{children:["Send a ",(0,n.jsx)(i.a,{href:"https://dialx.ai/dial_api#tag/Applications/operation/saveCustomApplication",children:"PUT"})," request to DIAL Core, where in the request body you provide specific endpoints and parameters for your application. You can see them in DIAL Core documentation under the ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"dynamic setting"})," for ",(0,n.jsx)(i.code,{children:"applications"}),"."]}),"\n",(0,n.jsx)(i.p,{children:"Example of a PUT request body:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:'{\n  "application": {\n    "endpoint": "http://localhost:7001/openai/deployments/10k/chat/completions",\n    "displayName": "MyApp",\n    "iconUrl": "https://host/app.svg",\n    "description": "My application description",\n    "userRoles": ["AdminRole"],\n    "forwardAuthToken": true,\n    "features": {\n      "rateEndpoint": "http://host/rate",\n      "configurationEndpoint": "http://host/configure"\n    },\n    "maxInputAttachments": 10,\n    "inputAttachmentTypes": ["application/msword", "application/vnd.openxmlformats-officedocument.presentationml.presentation"],\n    "defaults": {\n      "paramStr": "value",\n      "paramBool": true,\n      "paramInt": 123,\n      "paramFloat": 0.25\n    },\n    "interceptors": ["interceptor1", "interceptor2", "interceptor3"]\n  }\n}\n'})}),"\n",(0,n.jsxs)(i.p,{children:["The configuration of an application is saved as a BLOB in the DIAL Core file system with a JSON object. This file is available via the ",(0,n.jsx)(i.a,{href:"https://dialx.ai/dial_api#tag/Applications/operation/getCustomApplicationSchema",children:"DIAL API"}),", according to the defined ",(0,n.jsx)(i.a,{href:"/tutorials/developers/apps-development/auth-matrix",children:"Auth Matrix"})," for a specific application."]}),"\n",(0,n.jsx)(i.h3,{id:"using-dial-core-config-1",children:"Using DIAL Core Config"}),"\n",(0,n.jsxs)(i.p,{children:["DIAL admins can create an application by including a valid JSON object with the application representation in the ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"DIAL Core"})," configuration for the ",(0,n.jsx)(i.code,{children:"applications"})," section."]}),"\n",(0,n.jsx)(i.p,{children:"Example of dynamic settings in DIAL Core:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:' "applications": {\n    "dial-rag": {\n      "displayName": "Dial RAG",\n      "description": "RAG (Retrieval Augmented Generation)",\n      "endpoint": "http://dial-rag:5000/openai/deployments/dial-rag/chat/completions",\n      "maxInputAttachments": 1,\n      "inputAttachmentTypes": [\n        "*/*"\n      ]\n    }\n }\n'})}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Important"}),": Apps added through direct modification of the DIAL Core configuration are immutable and cannot be edited via the UI or API, including by setup administrators. These apps are owned by the DIAL admin and are ideal for use cases where the app is configured once and remains unchanged, becoming available to users with predefined roles and permissions."]}),"\n",(0,n.jsx)(i.h2,{id:"access-control",children:"Access Control"}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["Refer to ",(0,n.jsx)(i.a,{href:"/platform/core/access-control-intro",children:"Access & Cost Control"})," to learn how access control to system resources is implemented in DIAL."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:"Applications, similarly to other DIAL resources such as conversations, prompts and files, can be made available to other users and applications. Access to applications can be controlled by explicitly defining user roles in the DIAL Core configuration or using DIAL Chat UI/DIAL API to publish or share applications."}),"\n",(0,n.jsx)(i.h3,{id:"dial-core-configuration",children:"DIAL Core Configuration"}),"\n",(0,n.jsxs)(i.p,{children:["If you enable your application by directly modifying the ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"DIAL Core configuration"}),", you can add ",(0,n.jsx)(i.a,{href:"https://docs.dialx.ai/platform/core/access-control-intro#about-roles",children:"user roles"})," to the JSON object with the configuration of the application. This allows you to define access permissions for other users as well as impose usage limits."]}),"\n",(0,n.jsxs)(i.p,{children:[(0,n.jsx)(i.strong,{children:"Important"}),": if ",(0,n.jsx)(i.code,{children:"userRoles"})," is not specified, the application will be available to all users."]}),"\n",(0,n.jsx)(i.h5,{id:"example",children:"Example"}),"\n",(0,n.jsx)(i.p,{children:"Applications use language models on behalf of users and within the defined limits, provided both model and application can be accessed by a specific user role."}),"\n",(0,n.jsxs)(i.p,{children:["In the following example, the ",(0,n.jsx)(i.code,{children:"my_app"})," application is accessible to users with the ",(0,n.jsx)(i.code,{children:"app_user"})," role. For this user role, usage limits are set on the ",(0,n.jsx)(i.code,{children:"chat-gpt-35-turbo"})," model, as specified in the ",(0,n.jsx)(i.code,{children:"limits"})," section. When a user with the ",(0,n.jsx)(i.code,{children:"app_user"})," role uses the application, the app will use the ",(0,n.jsx)(i.code,{children:"chat-gpt-35-turbo"})," model within these prescribed limits."]}),"\n",(0,n.jsx)(i.p,{children:"Example of dynamic settings in DIAL Core:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:'"applications":\n  "my_app": {\n    "userRoles": ["app_user"],\n    }\n"roles": {\n    "app_user": { // the name of the role\n        "limits": {\n            "chat-gpt-35-turbo": {\n              "minute": "100000", //number of tokens per minute\n              "day": "10000000", //number of tokens per day\n              "week": "10000000", //number of tokens per week\n              "month": "10000000", //number of tokens per month\n            }\n        }\n    }\n}\n'})}),"\n",(0,n.jsx)(i.h3,{id:"ui--api",children:"UI & API"}),"\n",(0,n.jsx)(i.p,{children:"You can use DIAL UI and API to publish and/or share applications with other users."}),"\n",(0,n.jsxs)(i.blockquote,{children:["\n",(0,n.jsxs)(i.p,{children:["Refer to ",(0,n.jsx)(i.a,{href:"https://docs.dialx.ai/platform/collaboration-intro",children:"Collaboration"})," to learn about sharing and publishing in DIAL."]}),"\n"]}),"\n",(0,n.jsx)(i.h3,{id:"access-to-application-files",children:"Access to Application Files"}),"\n",(0,n.jsx)(i.p,{children:"Applications can rely on resources like documents and files to operate. When the application is shared or published, it is crucial to ensure that these resources are accessible, if needed, to all involved parties in the operation flow."}),"\n",(0,n.jsx)(i.p,{children:"Providing access to application files differs significantly between schema-rich applications and those without schemas."}),"\n",(0,n.jsx)(i.h5,{id:"for-applications-without-schemas",children:"For applications without schemas"}),"\n",(0,n.jsx)(i.p,{children:"Developers must handle access to files on their own when the application is shared or published. It requires careful implementation to ensure all necessary resources are available for authorized users and apps."}),"\n",(0,n.jsx)(i.h5,{id:"for-schema-rich-applications",children:"For schema-rich applications"}),"\n",(0,n.jsxs)(i.p,{children:["In schema-rich applications, ",(0,n.jsx)(i.strong,{children:"auto-share"})," principle applies to handle access to files."]}),"\n",(0,n.jsxs)(i.p,{children:["JSON schema of schema-rich apps can include links to resources (e.g., files or documents) that are required by the application to operate. Auto-share logic applies to all resources marked as ",(0,n.jsx)(i.code,{children:'"dial_file": true'}),". If the resource is marked as ",(0,n.jsx)(i.code,{children:'"dial_file": true'}),", it will be ",(0,n.jsx)(i.strong,{children:"automatically"})," shared when this application is shared with other users, published or as part of a requests chain between applications. ",(0,n.jsx)(i.strong,{children:"Important"}),": To prevent specific resources from being shared automatically, avoid using ",(0,n.jsx)(i.code,{children:'"dial_file": true'})," in schema."]}),"\n",(0,n.jsx)(i.p,{children:"Let's consider the following scenario as an example:"}),"\n",(0,n.jsxs)(i.ol,{children:["\n",(0,n.jsx)(i.li,{children:"A DIAL Chat user initiates a conversation with a schema-rich RAG application (App1)."}),"\n",(0,n.jsxs)(i.li,{children:["DIAL Core issues a ",(0,n.jsx)(i.a,{href:"/platform/core/per-request-keys#files-sharing",children:"per-request API key"})," for this request."]}),"\n",(0,n.jsxs)(i.li,{children:["DIAL Core checks the schema of the App1 and gives READ access for the per-request API key to all files marked as ",(0,n.jsx)(i.code,{children:'"dial_file": true'}),". This way, the application automatically gets access to necessary files to generate responses."]}),"\n"]}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{src:a(93094).Z+"",width:"1475",height:"790"})}),"\n",(0,n.jsx)(i.p,{children:"To enable th auto share mechanics, include this in the application JSON schema:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:'"rag_files": {\n\t"type": "array",\n\t"items": {\n\t\t"type": "string",\n\t\t"dial_file": true,\n    "format": "dial-file-encoded",\n\t}\n}\n'})}),"\n",(0,n.jsx)(i.p,{children:"Configuration of the application in DIAL Core dynamic settings can include a path to a specific file that will be shared:"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{className:"language-json",children:'"applicationProperties": {\n\t"rag_files": ["files/csdvsdvsd/my_file.docx"]\n}\n'})}),"\n",(0,n.jsx)(i.p,{children:"Similarly, if App1 has to call App2 to perform a specific action, another per-request API key is issued with access to App2 files:"}),"\n",(0,n.jsx)(i.p,{children:(0,n.jsx)(i.img,{src:a(4388).Z+"",width:"1567",height:"282"})}),"\n",(0,n.jsx)(i.h2,{id:"enable-not-dial-native-apps",children:"Enable NOT DIAL-Native Apps"}),"\n",(0,n.jsxs)(i.p,{children:["\ud83d\udcbe"," In self-hosted deployments of DIAL, you can integrate your conversational (implementing a completion endpoint) or non-conversational apps into DIAL, even if they don't follow the unified protocol of DIAL."]}),"\n",(0,n.jsx)(i.h5,{id:"custom-uis",children:"Custom UIs"}),"\n",(0,n.jsxs)(i.p,{children:["You can create schema-rich application types with custom UIs to replace the default DIAL UI, even for non-conversational apps. Additionally, you can implement separate custom wizards as needed. Custom UIs can follow any logic and are defined in the application type schema using ",(0,n.jsx)(i.code,{children:"applicationTypeViewerUrl"})," for UI and ",(0,n.jsx)(i.code,{children:"applicationTypeEditorUrl"})," for wizard."]}),"\n",(0,n.jsx)(i.h5,{id:"application-endpoint",children:"Application Endpoint"}),"\n",(0,n.jsxs)(i.p,{children:["To enable DIAL apps to communicate with your application, you can register your application's endpoint in DIAL Core as a ",(0,n.jsx)(i.code,{children:"route"}),". You can apply roles, usage limits, and associate API keys with these routes, enabling seamless integration with DIAL Core features. For details on registering routes, refer to ",(0,n.jsx)(i.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"DIAL Core dynamic settings"}),"."]})]})}function d(e={}){const{wrapper:i}={...(0,t.a)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},4388:(e,i,a)=>{a.d(i,{Z:()=>n});const n=a.p+"assets/images/files-sharing-754acfb54f4e86cf2476c0ad45bd5c65.svg"},93094:(e,i,a)=>{a.d(i,{Z:()=>n});const n=a.p+"assets/images/files-sharing2-b4396b7b5d3e80b9e3b47632ea569190.svg"},16026:(e,i,a)=>{a.d(i,{Z:()=>n});const n=a.p+"assets/images/schema-rich-apps-3d533113ef759e0ee74553d7fb53fd55.svg"},11151:(e,i,a)=>{a.d(i,{Z:()=>r,a:()=>o});var n=a(67294);const t={},s=n.createContext(t);function o(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),n.createElement(s.Provider,{value:i},e.children)}}}]);