"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[6528],{7424:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var s=n(5893),i=n(1151);const r={},a="DIAL Components",o={id:"platform/architecture-and-concepts/components",title:"DIAL Components",description:"DIAL Core",source:"@site/docs/platform/0.architecture-and-concepts/3.components.md",sourceDirName:"platform/0.architecture-and-concepts",slug:"/platform/architecture-and-concepts/components",permalink:"/platform/architecture-and-concepts/components",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"DIAL Architecture",permalink:"/platform/architecture-and-concepts/architecture"},next:{title:"DIAL as Agentic Platform",permalink:"/platform/architecture-and-concepts/agentic-platform"}},l={},c=[{value:"DIAL Core",id:"dial-core",level:2},{value:"Authentication and Authorization",id:"authentication-and-authorization",level:3},{value:"Load Balancer",id:"load-balancer",level:3},{value:"Rate Limits &amp; Cost Control",id:"rate-limits--cost-control",level:3},{value:"Extensions",id:"extensions",level:3},{value:"Logging",id:"logging",level:3},{value:"Entitlements",id:"entitlements",level:3},{value:"Chat",id:"chat",level:2},{value:"Overlay",id:"overlay",level:3},{value:"Themes",id:"themes",level:3},{value:"Persistent Layer",id:"persistent-layer",level:2},{value:"Auth Helper",id:"auth-helper",level:2},{value:"Analytics Realtime",id:"analytics-realtime",level:2},{value:"LLM Adapters",id:"llm-adapters",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.h1,{id:"dial-components",children:"DIAL Components"}),"\n",(0,s.jsx)(t.h2,{id:"dial-core",children:"DIAL Core"}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core",children:"DIAL Core"})," GitHub repository."]}),"\n",(0,s.jsxs)(t.li,{children:["Refer to ",(0,s.jsx)(t.a,{href:"/platform/core/about-core",children:"Core"})," to see documentation of DIAL and its features."]}),"\n"]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"DIAL Core"})," serves as the primary system component, acting as a ",(0,s.jsx)(t.strong,{children:"main integration center"}),", that employs a ",(0,s.jsx)(t.strong,{children:"Unified Protocol"})," (",(0,s.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/azure/ai-services/openai/reference",children:"OpenAI"})," compatible) for communication between internal and external clients, including all LLM models and applications to access all its features in a governed and unified manner."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(8684).Z+"",width:"1218",height:"866"})}),"\n",(0,s.jsxs)(t.p,{children:[(0,s.jsx)(t.strong,{children:"The Unified Protocol supports"}),":"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Streaming"}),"\n",(0,s.jsx)(t.li,{children:"Token usage (even in the streaming mode)"}),"\n",(0,s.jsx)(t.li,{children:"Seeds: helps to achieve deterministic results for LLM responses."}),"\n",(0,s.jsx)(t.li,{children:"Tools: (formerly known as functions ) are specialized utilities that streamline development by implementing standardized methods for LLMs to access external APIs."}),"\n",(0,s.jsx)(t.li,{children:"Multi-modality: allows supporting non-textual communications such as image-to-text, text-to-image, file transfers and more."}),"\n",(0,s.jsx)(t.li,{children:"Compatibility with OpenAI"}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:"This approach streamlines communication and fosters interoperability by eliminating the need for multiple protocols for each integration."}),"\n",(0,s.jsxs)(t.p,{children:["DIAL Core is headless and is the ",(0,s.jsx)(t.strong,{children:"only mandatory component"}),". It includes all the key platform features:"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(9514).Z+"",width:"521",height:"527"})}),"\n",(0,s.jsx)(t.h3,{id:"authentication-and-authorization",children:"Authentication and Authorization"}),"\n",(0,s.jsxs)(t.p,{children:["DIAL provides native support for ",(0,s.jsx)(t.a,{href:"https://openid.net/developers/how-connect-works/",children:"OpenID Connect"})," and ",(0,s.jsx)(t.a,{href:"https://oauth.net/2/",children:"OAuth2"})," and offers ",(0,s.jsx)(t.a,{href:"/tutorials/devops/auth-and-access-control/configure-idps/overview",children:"integration with various Identity Providers (IDP)"})," such as Azure AD, Auth0, Okta, Microsoft Entra, Google OAuth2, and AWS Cognito where you can define user roles and attributes to support your custom permissions model. Additionally, you can leverage Keycloak to work with even wider range of IDPs."]}),"\n",(0,s.jsx)(t.p,{children:"There are two methods of CORE API calls authorization supported: JWT token and key. Both options provide granular permission management, allowing you to control access to specific functionalities or resources. Additionally, these authorization methods also enable rate and cost control, giving you the ability to manage the frequency of API calls."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"/platform/core/auth-intro",children:"Authentication"})," to learn how to authenticate API keys and JWT and to ",(0,s.jsx)(t.a,{href:"/platform/core/access-control-intro",children:"Access & Cost Control"})," to learn how to implement a custom role-based access policy."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"load-balancer",children:"Load Balancer"}),"\n",(0,s.jsx)(t.p,{children:"For self-hosted models, you can use the standard load balancer (LB) capabilities provided by the target cloud platform. As for cloud-deployed models like Azure OpenAI and others, we typically rely on our custom-developed load balancing solution."}),"\n",(0,s.jsxs)(t.p,{children:["In this approach, a configuration file includes multiple upstream endpoints for a model. When a request is received, it is forwarded to one of the endpoints using the round-robin method. If an upstream returns an overload limit error such as a 429 (Too Many Requests) or a 504 (Gateway Timeout), the system attempts another upstream and temporarily excludes the one that generated the error. This strategy ensures efficient load distribution and fault tolerance for optimal performance and reliability. Refer to the ",(0,s.jsx)(t.a,{href:"/platform/high-load-performance",children:"document"})," with the overview of the performance tests to learn more."]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"/platform/core/load-balancer",children:"Load Balancer"})," to learn more."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"rate-limits--cost-control",children:"Rate Limits & Cost Control"}),"\n",(0,s.jsx)(t.p,{children:"A well-distributed rate-limiting mechanism ensures the control over the total number of tokens that can be sent to a model (typically a one-minute or 24-hour window) by any application."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Refer to ",(0,s.jsx)(t.a,{href:"/platform/core/access-control-intro",children:"Roles & Access Control"})," to learn how to configure limits for API keys and JWT."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"extensions",children:"Extensions"}),"\n",(0,s.jsxs)(t.p,{children:["DIAL is an open-ended system that can be extended to satisfy a variety of business cases. Extensions have freedom to employ a technology of their preference, be it any LLM framework, ",(0,s.jsx)(t.a,{href:"https://github.com/run-llama/llama_index/tree/main",children:"LlamaIndex"}),", ",(0,s.jsx)(t.a,{href:"https://github.com/langchain-ai/langchain",children:"LangChain"}),", ",(0,s.jsx)(t.a,{href:"https://github.com/microsoft/semantic-kernel?tab=readme-ov-file",children:"Semantic Kernel"}),", vector DBs or any other."]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(8684).Z+"",width:"1218",height:"866"})}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Agent"}),": Agents are DIAL-native applications and language models deployed in DIAL. Agents can be used as building blocks to create applications. Refer to ",(0,s.jsx)(t.a,{href:"/platform/architecture-and-concepts/agentic-platform",children:"Agentic Platform"})," to learn more."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"DIAL-native Application"}),": DIAL-native apps have API that adheres to Unified protocol of DIAL. Refer to ",(0,s.jsx)(t.a,{href:"/platform/architecture-and-concepts/concepts#dial-native-applications",children:"Main Concepts"})," to learn more. Refer to ",(0,s.jsx)(t.a,{href:"/platform/architecture-and-concepts/agentic-platform#create-dial-native-app",children:"Agentic Platform"})," to learn about available application types and how to create DIAL-native apps."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Tool"}),": Tools allow your apps to interact with external services to perform specific actions. Register your tools using OpenAPI. Use tools in your agents or share with others on DIAL Marketplace."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.a,{href:"#llm-adapters",children:"Adapter"}),": Adapters unify APIs of respective LLMs to align with the Unified Protocol of DIAL Core. Refer to ",(0,s.jsx)(t.a,{href:"/platform/supported-models",children:"AI Model Providers"})," to view all the supported model adapters and language models."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["You can use DIAL SDK to develop DIAL-native apps and model adapters. Applications and model adapters implemented using DIAL SDK will be compatible with ",(0,s.jsx)(t.a,{href:"https://dialx.ai/dial_api",children:"DIAL API"})," that was designed based on ",(0,s.jsx)(t.a,{href:"https://learn.microsoft.com/en-us/azure/ai-services/openai/reference",children:"Azure OpenAI API"}),"."]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-sdk",children:"DIAL SDK"})," and ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-sdk/tree/development/examples",children:"Development Examples"})," to learn more."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["\ud83d\udcbe"," ",(0,s.jsx)(t.a,{href:"https://dialx.ai/editions",children:"Self-hosted edition of DIAL"})," offers additional extensibility options:"]}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Application types"}),": In addition to standard application types, you can add new types. Application type is a schema-rich template for creating applications of a specific type. Refer to ",(0,s.jsx)(t.a,{href:"/platform/architecture-and-concepts/agentic-platform#application-types",children:"Application Types"})," to learn more."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Custom Visualizers"}),": Visualizers are special applications for rendering a specific type of content in DIAL Chat UI. Refer to ",(0,s.jsx)(t.a,{href:"/tutorials/developers/chat/create-custom-visualizer",children:"Create Custom Visualizer"})," to learn more."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Interceptors"}),": Create custom interceptors to modify in/out requests for models and apps, enabling PII obfuscation, guardrails, safety checks, and beyond. Refer to ",(0,s.jsx)(t.a,{href:"/platform/core/interceptors",children:"Interceptors"})," to learn more."]}),"\n",(0,s.jsxs)(t.li,{children:[(0,s.jsx)(t.strong,{children:"Integrate Applications"}),": Create a single access point for all your apps built on other platforms by bringing them to DIAL. Register the app's UI to list it on Marketplace or API to access all DIAL Core features."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"logging",children:"Logging"}),"\n",(0,s.jsxs)(t.p,{children:["DIAL Core uses ",(0,s.jsx)(t.a,{href:"https://vector.dev/docs/reference/configuration/sinks/",children:"Vector"}),' (a lightweight, ultra-fast tool for building observability pipelines) to redirect users\u2019 messages to S3, Azure Blob Store, GCP Cloud Storage or any other "sink".']}),"\n",(0,s.jsx)(t.p,{children:"You can gather standard logs (which do not contain user messages) from components using the ELK stack (Elasticsearch, Logstash, Kibana) or other log collection system."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"/platform/observability-intro",children:"Observability"})," to learn more."]}),"\n"]}),"\n",(0,s.jsx)(t.h3,{id:"entitlements",children:"Entitlements"}),"\n",(0,s.jsx)(t.p,{children:"In DIAL Core, user roles are defined and configured in the application config file. This allows administrators to specify which users or user groups are authorized to access specific resources or features within the application. These user roles match the once created in your IDP."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"/platform/core/access-control-intro#about-roles",children:"About Roles"})," to learn about roles-based access to resources."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"chat",children:"Chat"}),"\n",(0,s.jsx)(t.p,{children:"Chat is a default DIAL UI which provides access to the full set of its features."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsxs)(t.li,{children:["Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-chat",children:"Chat"})," repository in GitHub to see the project source code."]}),"\n",(0,s.jsxs)(t.li,{children:["Refer to ",(0,s.jsx)(t.a,{href:"/tutorials/user-guide",children:"User Guide"})," to learn about DIAL Chat features."]}),"\n"]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(6152).Z+"",width:"1376",height:"1018"})}),"\n",(0,s.jsx)(t.h3,{id:"overlay",children:"Overlay"}),"\n",(0,s.jsx)(t.p,{children:"UI Overlay allows adding Chat to a web application with zero effort by simply inserting a short HTML block."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-chat/blob/development/libs/overlay/README.md",children:"Chat Overlay"})," repository in GitHub to learn more."]}),"\n"]}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{className:"language-html",children:'<html>\n  <head>\n    <meta name="viewport" content="width=device-width, initial-scale=1.0" />\n  </head>\n  <body>\n    <script type="module">\n      import CHATAIOverlay from "./script.js";\n\n      const chatAiOverlay = new CHATAIOverlay("http://localhost:3000");\n      chatAiOverlay.load();\n    <\/script>\n  </body>\n</html>\n'})}),"\n",(0,s.jsx)(t.h3,{id:"themes",children:"Themes"}),"\n",(0,s.jsx)(t.p,{children:"Chat Themes are used to customize the styles of Chat UI."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-chat-themes",children:"DIAL Chat Themes"})," GitHub repository to learn more."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"persistent-layer",children:"Persistent Layer"}),"\n",(0,s.jsx)(t.p,{children:"DIAL architecture includes a persistent layer, that relies on a resilient and scalable cloud blob storage (you can configure either AWS S3, Google Cloud Storage, Azure Blob Storage or a local file storage) where all conversations, prompts, custom applications and user files will be stored. Redis Cache (either cluster or a standalone) is deployed on top of it to enhance performance."}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(5570).Z+"",width:"1230",height:"277"})}),"\n",(0,s.jsx)(t.p,{children:"This architecture facilitates the swift retrieval of stored resources, supporting features such as sharing and publication of conversations and prompts."}),"\n",(0,s.jsx)(t.h2,{id:"auth-helper",children:"Auth Helper"}),"\n",(0,s.jsxs)(t.p,{children:["Auth Helper is used to resolve challenges (such as access control issues with the ",(0,s.jsx)(t.code,{children:"/userinfo"})," endpoint and retrieving user profile pictures) that may arise during integration with IDPs like Azure AD."]}),"\n",(0,s.jsx)(t.p,{children:"It is a proxy service that implements OpenID-compatible Web API endpoints to avoid direct interaction with such IDPs."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-auth-helper",children:"DIAL Auth Helper"})," repository in GitHub to learn more."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"analytics-realtime",children:"Analytics Realtime"}),"\n",(0,s.jsx)(t.p,{children:"The DIAL Analytics Realtime tool uses diverse techniques such as embedding algorithms, clustering algorithms, frameworks, light-weight self-hosted language models, to analyze the conversation data and extract the needed results, which can be presented in tools such as Grafana for visualization."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-analytics-realtime",children:"Analytics Realtime"})," GitHub repository."]}),"\n"]}),"\n",(0,s.jsxs)(t.p,{children:["Analytics Realtime tool is a sink of ",(0,s.jsx)(t.code,{children:"vector.dev"}),". It does not retain any private information, such as user prompts or conversations, beyond the system. Instead, only the computed artifacts are collected and stored in time-series databases like InfluxDB or any scalable database capable of handling voluminous, constantly changing information."]}),"\n",(0,s.jsx)(t.p,{children:"Examples of the computed artifacts:"}),"\n",(0,s.jsxs)(t.ul,{children:["\n",(0,s.jsx)(t.li,{children:"Who has used the AI? \u2013 user hash, title, and never personal data such as names."}),"\n",(0,s.jsx)(t.li,{children:"What areas have people asked questions about?"}),"\n",(0,s.jsx)(t.li,{children:"Are there any recurring patterns?"}),"\n",(0,s.jsx)(t.li,{children:"Topics of conversations."}),"\n",(0,s.jsx)(t.li,{children:"Unique users."}),"\n",(0,s.jsx)(t.li,{children:"Sentiments."}),"\n",(0,s.jsx)(t.li,{children:"Cost analysis of the communication."}),"\n",(0,s.jsx)(t.li,{children:"Language of conversations."}),"\n",(0,s.jsx)(t.li,{children:"Any other calculated statistics based on conversations."}),"\n"]}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"/platform/realtime-analytics-intro",children:"Tutorials"})," to learn more about configuration and usage of this service."]}),"\n"]}),"\n",(0,s.jsx)(t.h2,{id:"llm-adapters",children:"LLM Adapters"}),"\n",(0,s.jsx)(t.p,{children:"LLM Adapters unify the APIs of respective LLMs to align with the Unified Protocol of DIAL Core. Each Adapter operates within a dedicated container. Multi-modality allows supporting non-textual communications such as image-to-text, text-to-image, file transfers and more."}),"\n",(0,s.jsxs)(t.blockquote,{children:["\n",(0,s.jsxs)(t.p,{children:["Refer to ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-adapter-openai",children:"Azure OpenAI"}),", ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-adapter-vertexai",children:"GCP Vertex AI"})," and ",(0,s.jsx)(t.a,{href:"https://github.com/epam/ai-dial-adapter-bedrock",children:"AWS Bedrock DIAL"})," repositories in GitHub."]}),"\n"]}),"\n",(0,s.jsx)(t.p,{children:(0,s.jsx)(t.img,{src:n(7989).Z+"",width:"1666",height:"728"})})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},7989:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/adapters-62587fb74cfb1c4225c20c08273ec5bc.svg"},6152:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/chat-c4098e8d8248c876beb822ffe1d8c480.svg"},9514:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/core-5241d5af83677fc05b5d3b292dcf7fae.svg"},8684:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/minimal2-79bbe0fa6089b414533a3153c64671f9.svg"},5570:(e,t,n)=>{n.d(t,{Z:()=>s});const s=n.p+"assets/images/redis-f2e7e11172d10b2e4f9409250282f3bc.svg"},1151:(e,t,n)=>{n.d(t,{Z:()=>o,a:()=>a});var s=n(7294);const i={},r=s.createContext(i);function a(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);