"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[948],{28490:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var t=i(85893),o=i(11151);const r={},s="DIAL Core",a={id:"platform/core/about-core",title:"DIAL Core",description:"Introduction",source:"@site/docs/platform/3.core/0.about-core.md",sourceDirName:"platform/3.core",slug:"/platform/core/about-core",permalink:"/platform/core/about-core",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:0,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"Supported Models",permalink:"/platform/supported-models"},next:{title:"Access Control in DIAL",permalink:"/platform/core/access-control-intro"}},l={},c=[{value:"Introduction",id:"introduction",level:2},{value:"Unified API",id:"unified-api",level:2},{value:"Unified API Features",id:"unified-api-features",level:5}];function d(e){const n={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",h5:"h5",img:"img",li:"li",p:"p",strong:"strong",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"dial-core",children:"DIAL Core"}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsxs)(n.li,{children:["Refer to ",(0,t.jsx)(n.a,{href:"https://github.com/epam/ai-dial-core",children:"DIAL Core"})," GitHub repository to view the project source code and configuration guidelines."]}),"\n",(0,t.jsxs)(n.li,{children:["Refer to ",(0,t.jsx)(n.a,{href:"/platform/architecture-and-concepts/components#ai-dial-core",children:"DIAL Components"})," to view the DIAL Core overview."]}),"\n"]}),"\n"]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.strong,{children:"DIAL Core"})," serves as the primary system component, acting as a ",(0,t.jsx)(n.strong,{children:"main integration center"}),", that employs a ",(0,t.jsx)(n.strong,{children:"Unified Protocol"})," (",(0,t.jsx)(n.a,{href:"https://learn.microsoft.com/en-us/azure/ai-services/openai/reference",children:"OpenAI"})," compatible) for communication between internal and external clients, including LLM models, Applications, and other to access all its features in a governed and unified manner."]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:i(88692).Z+"",width:"1218",height:"866"})}),"\n",(0,t.jsxs)(n.p,{children:["DIAL Core is headless and is the ",(0,t.jsx)(n.strong,{children:"only mandatory component"}),". It includes all the key platform features:"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:i(38954).Z+"",width:"521",height:"527"})}),"\n",(0,t.jsx)(n.h2,{id:"unified-api",children:"Unified API"}),"\n",(0,t.jsx)(n.p,{children:"DIAL provides a single Unified API, based on OpenAI API, for accessing all language models, embedding models and applications. The key design principle is to create a unification layer that allows all models and applications to be interchangeable, delivering a cohesive conversational experience and future-proof development of custom GenAI applications."}),"\n",(0,t.jsxs)(n.blockquote,{children:["\n",(0,t.jsxs)(n.p,{children:["Watch a ",(0,t.jsx)(n.a,{href:"/video%20demos/Developers/dial-unified-api",children:"Video Demo"})," about the unified protocol of DIAL."]}),"\n"]}),"\n",(0,t.jsx)(n.h5,{id:"unified-api-features",children:"Unified API Features"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Streaming"}),"\n",(0,t.jsx)(n.li,{children:"Token usage (even in the streaming mode)"}),"\n",(0,t.jsx)(n.li,{children:"Seeds: helps to achieve deterministic results for LLM responses."}),"\n",(0,t.jsx)(n.li,{children:"Tools: (formerly known as functions) are specialized utilities that streamline development by implementing standardized methods for LLMs to access external APIs."}),"\n",(0,t.jsx)(n.li,{children:"Multi-modality: allows supporting non-textual communications such as image-to-text, text-to-image, file transfers and more."}),"\n",(0,t.jsx)(n.li,{children:"Compatibility with OpenAI"}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:"This approach streamlines communication and fosters interoperability by eliminating the need for multiple protocols for each integration."})]})}function p(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},38954:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/images/core-5241d5af83677fc05b5d3b292dcf7fae.svg"},88692:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/images/minimal2-79bbe0fa6089b414533a3153c64671f9.svg"},11151:(e,n,i)=>{i.d(n,{Z:()=>a,a:()=>s});var t=i(67294);const o={},r=t.createContext(o);function s(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(r.Provider,{value:n},e.children)}}}]);