"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[8521],{5286:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>r,default:()=>h,frontMatter:()=>o,metadata:()=>l,toc:()=>a});var i=n(85893),s=n(11151);const o={},r="Integration of DIAL with Continue",l={id:"tutorials/developers/integrations/vscode-extension",title:"Integration of DIAL with Continue",description:"Introduction",source:"@site/docs/tutorials/1.developers/5.integrations/2.vscode-extension.md",sourceDirName:"tutorials/1.developers/5.integrations",slug:"/tutorials/developers/integrations/vscode-extension",permalink:"/tutorials/developers/integrations/vscode-extension",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:2,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"DIAL Integration with Microsoft Teams",permalink:"/tutorials/developers/integrations/msteams-bot"},next:{title:"Integration of DIAL with n8n",permalink:"/tutorials/developers/integrations/n8n-integration"}},d={},a=[{value:"Introduction",id:"introduction",level:2},{value:"DIAL Extension",id:"dial-extension",level:2},{value:"Features",id:"features",level:3},{value:"Installation",id:"installation",level:3},{value:"Settings",id:"settings",level:3},{value:"Commands",id:"commands",level:3}];function c(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",img:"img",li:"li",ol:"ol",p:"p",strong:"strong",table:"table",tbody:"tbody",td:"td",th:"th",thead:"thead",tr:"tr",ul:"ul",...(0,s.a)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.h1,{id:"integration-of-dial-with-continue",children:"Integration of DIAL with Continue"}),"\n",(0,i.jsx)(t.h2,{id:"introduction",children:"Introduction"}),"\n",(0,i.jsxs)(t.p,{children:["DIAL is an open platform that integrates with external systems, libraries, and frameworks to enhance and extend their existing functionalities. This document explains the integration of DIAL with the ",(0,i.jsx)(t.a,{href:"https://marketplace.visualstudio.com/items?itemName=Continue.continue",children:"Continue"})," extension for Visual Studio Code (VS Code) - AI-powered code assistant, similar to a copilot."]}),"\n",(0,i.jsx)(t.p,{children:"The purpose of this integration is to enable VS Code users use the Continue code assistant with DIAL models."}),"\n",(0,i.jsx)(t.p,{children:"This implementation also serves as a practical example of DIAL's integration with other systems."}),"\n",(0,i.jsx)(t.h2,{id:"dial-extension",children:"DIAL Extension"}),"\n",(0,i.jsxs)(t.p,{children:["To enable this integration, we developed a VS Code extension that automatically modifies the Continue's VS Code extension ",(0,i.jsx)(t.code,{children:"config.json"})," file with configuration data from DIAL Core, based on the authenticated user (e.g., logged-in user and access tokens). This way a DIAL user can use Continue code assistant with DIAL models available to this user and within limits defined in DIAL Core configuration."]}),"\n",(0,i.jsxs)(t.blockquote,{children:["\n",(0,i.jsxs)(t.p,{children:["Watch a ",(0,i.jsx)(t.a,{href:"/video%20demos/Developers/Integrations/dial-continue",children:"demo video"})," to see this integration in action."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"features",children:"Features"}),"\n",(0,i.jsx)(t.p,{children:"These are the main features of the DIAL VS Code extension:"}),"\n",(0,i.jsxs)(t.ul,{children:["\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Secure Authentication"}),": The extension uses the PKCE flow with Keycloak for a secure authentication of users."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Automatic Token Management"}),": It refreshes tokens automatically before they expire to ensure uninterrupted access."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Configuration File Generation"}),": The extension automatically creates configuration files required for Continue based on DIAL Core settings."]}),"\n",(0,i.jsxs)(t.li,{children:[(0,i.jsx)(t.strong,{children:"Customizable Settings"}),": The extension's configuration allows you to define settings specific for your DIAL environment: authentication hosts, realms, and client IDs."]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"installation",children:"Installation"}),"\n",(0,i.jsx)(t.p,{children:"DIAL Plugin is not available on the Visual Studio Marketplace, follow these steps to install it manually:"}),"\n",(0,i.jsxs)(t.ol,{children:["\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Send us a request to get the latest ",(0,i.jsx)(t.code,{children:".vsix"})," file."]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["In VS Code Extensions, click on the three-dot menu in the top right corner of the Extensions pane and select ",(0,i.jsx)(t.strong,{children:"Install from VSIX..."}),". Run the ",(0,i.jsx)(t.code,{children:".vsix"})," file to install both DIAL and Continue extensions.\n",(0,i.jsx)(t.img,{src:n(93416).Z+"",width:"712",height:"321"})]}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsx)(t.p,{children:"Reload VS Code to activate the extension."}),"\n"]}),"\n",(0,i.jsxs)(t.li,{children:["\n",(0,i.jsxs)(t.p,{children:["Click Ctrl+Shift+P (Cmd+Shift+P on macOS) to open the Command Palette and type in ",(0,i.jsx)(t.code,{children:"AI DIAL: Auth"})," to authenticate with DIAL. Once authenticated, the extension will automatically generate the necessary configuration files for Continue, allowing you to use DIAL models with the Continue extension."]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(86947).Z+"",width:"418",height:"339"})}),"\n"]}),"\n"]}),"\n",(0,i.jsx)(t.h3,{id:"settings",children:"Settings"}),"\n",(0,i.jsx)(t.p,{children:"To configure settings, navigate to File > Preferences > Settings (Code > Preferences > Settings on macOS) and search for the DIAL plugin in the search bar."}),"\n",(0,i.jsx)(t.p,{children:"The extension allows you to set the following configuration options:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Setting"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Type"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Default"})}),(0,i.jsx)(t.th,{children:(0,i.jsx)(t.strong,{children:"Description"})})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"aiDialPlugin.authKeycloakHost"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Auth host"}),(0,i.jsx)(t.td,{children:"The Keycloak authentication API host."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"aiDialPlugin.keycloakClientId"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"pkce"}),(0,i.jsx)(t.td,{children:"The Keycloak client ID."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"aiDialPlugin.dialApiHost"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"Dial host"}),(0,i.jsx)(t.td,{children:"The DIAL API host."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:(0,i.jsx)(t.code,{children:"aiDialPlugin.dialApiVersion"})}),(0,i.jsx)(t.td,{children:"String"}),(0,i.jsx)(t.td,{children:"2024-02-01"}),(0,i.jsx)(t.td,{children:"The version of the DIAL API."})]})]})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(43326).Z+"",width:"1213",height:"751"})}),"\n",(0,i.jsx)(t.h3,{id:"commands",children:"Commands"}),"\n",(0,i.jsx)(t.p,{children:"In VS Code, press Ctrl+Shift+P (Cmd+Shift+P on macOS) to open the Command Palette and type in AI DIAL to see the available commands:"}),"\n",(0,i.jsxs)(t.table,{children:[(0,i.jsx)(t.thead,{children:(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.th,{children:"Command Name"}),(0,i.jsx)(t.th,{children:"Description"})]})}),(0,i.jsxs)(t.tbody,{children:[(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"AI DIAL: Reset Configuration"}),(0,i.jsx)(t.td,{children:"Use to reset the extension's configuration to default."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"AI DIAL: Select AI Models"}),(0,i.jsx)(t.td,{children:"Select models that will become available in your extension."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"AI DIAL: Auth"}),(0,i.jsx)(t.td,{children:"Use to authenticate with DIAL."})]}),(0,i.jsxs)(t.tr,{children:[(0,i.jsx)(t.td,{children:"AI DIAL: Update Models"}),(0,i.jsx)(t.td,{children:"Use to update the list of models."})]})]})]}),"\n",(0,i.jsx)(t.p,{children:(0,i.jsx)(t.img,{src:n(67582).Z+"",width:"1323",height:"233"})})]})}function h(e={}){const{wrapper:t}={...(0,s.a)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}},86947:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/continue1-476c2addcadc71aa26cf8ed4e3d6b152.png"},93416:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/continue2-82e305082e469951e04d412cd029e24c.png"},67582:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/continue3-789458d6f3137b849fe86e533000a83f.png"},43326:(e,t,n)=>{n.d(t,{Z:()=>i});const i=n.p+"assets/images/continue4-df56f5506a00a861a90f408452f377fe.png"},11151:(e,t,n)=>{n.d(t,{Z:()=>l,a:()=>r});var i=n(67294);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);