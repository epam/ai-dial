"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[2721],{66457:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>s,metadata:()=>l,toc:()=>d});var t=i(85893),o=i(11151);const s={},r="Integration of DIAL with Cline",l={id:"tutorials/developers/integrations/cline",title:"Integration of DIAL with Cline",description:"Introduction",source:"@site/docs/tutorials/1.developers/5.integrations/4.cline.md",sourceDirName:"tutorials/1.developers/5.integrations",slug:"/tutorials/developers/integrations/cline",permalink:"/tutorials/developers/integrations/cline",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:4,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"Integration of DIAL with Continue",permalink:"/tutorials/developers/integrations/vscode-extension"},next:{title:"Integration of DIAL with Roo Code",permalink:"/tutorials/developers/integrations/roocode"}},a={},d=[{value:"Introduction",id:"introduction",level:2},{value:"Cline Configuration",id:"cline-configuration",level:2}];function c(e){const n={a:"a",h1:"h1",h2:"h2",img:"img",li:"li",ol:"ol",p:"p",ul:"ul",...(0,o.a)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"integration-of-dial-with-cline",children:"Integration of DIAL with Cline"}),"\n",(0,t.jsx)(n.h2,{id:"introduction",children:"Introduction"}),"\n",(0,t.jsx)(n.p,{children:"DIAL is an open platform that integrates with external systems, libraries, and frameworks to enhance and extend their existing functionalities."}),"\n",(0,t.jsxs)(n.p,{children:["The purpose of this integration is to describe how to configure ",(0,t.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev",children:"Cline extension for MS Visual Studio Code"})," to work with models available in DIAL."]}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.a,{href:"https://cline.bot/",children:"Cline"})," is an AI coding agent that integrates with VS Code and other IDEs to help developers write, analyze, and modify code."]}),"\n",(0,t.jsx)(n.h2,{id:"cline-configuration",children:"Cline Configuration"}),"\n",(0,t.jsx)(n.p,{children:"Cline configuration basically comes down to configuring Cline extension for VS Code to work with DIAL models:"}),"\n",(0,t.jsxs)(n.ol,{children:["\n",(0,t.jsxs)(n.li,{children:[(0,t.jsx)(n.a,{href:"https://marketplace.visualstudio.com/items?itemName=saoudrizwan.claude-dev",children:"Install VS Code extension for Cline"}),"."]}),"\n",(0,t.jsxs)(n.li,{children:["In Cline Settings, go to API Configuration.","\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"Select OpenAI Compatible in API Provider box."}),"\n",(0,t.jsx)(n.li,{children:"Set your Base URL for OpenAI."}),"\n",(0,t.jsx)(n.li,{children:"In the OpenAI Compatible API Key field, paste your DIAL API key."}),"\n",(0,t.jsx)(n.li,{children:"Enter the desired model name manually in the Model ID field (e.g., gpt-4o). Make sure it matches the model name used in DIAL."}),"\n",(0,t.jsx)(n.li,{children:"Enable Set Azure API version and select the required API version (e.g., 2025-03-01-preview)."}),"\n",(0,t.jsx)(n.li,{children:"Optionally, enable Use different models for Plan and Act modes if you want to use separate models for each mode."}),"\n",(0,t.jsx)(n.li,{children:"Optionally, enter any additional system prompt instructions in the Custom Instructions field (e.g., Run unit tests at the end, Speak in Spanish)."}),"\n",(0,t.jsx)(n.li,{children:"Click Done to apply."}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.img,{src:i(50751).Z+"",width:"786",height:"750"})})]})}function u(e={}){const{wrapper:n}={...(0,o.a)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},50751:(e,n,i)=>{i.d(n,{Z:()=>t});const t=i.p+"assets/images/cline-configuration-21589e5eb903c02422a51d6eb9894e7b.png"},11151:(e,n,i)=>{i.d(n,{Z:()=>l,a:()=>r});var t=i(67294);const o={},s=t.createContext(o);function r(e){const n=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:n},e.children)}}}]);