"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[3998],{1558:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=s(5893),i=s(1151);const r={},o="Roles and Access Control for API Keys",a={id:"Roles and Access Control/API Keys",title:"Roles and Access Control for API Keys",description:"API Keys",source:"@site/docs/Roles and Access Control/3.API Keys.md",sourceDirName:"Roles and Access Control",slug:"/Roles and Access Control/API Keys",permalink:"/Roles and Access Control/API Keys",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"Overview",permalink:"/Roles and Access Control/overview"},next:{title:"Roles and Access Control for Chat Users",permalink:"/Roles and Access Control/chat-users"}},l={},c=[{value:"API Keys",id:"api-keys",level:2},{value:"Per-Request Keys",id:"per-request-keys",level:2},{value:"How It Works",id:"how-it-works",level:3},{value:"Calculating Costs &amp; Limits",id:"calculating-costs--limits",level:3},{value:"Gathering Statistics",id:"gathering-statistics",level:3},{value:"Files Sharing",id:"files-sharing",level:3},{value:"Telemetry Tracing",id:"telemetry-tracing",level:3},{value:"Access and Cost Control for External Applications",id:"access-and-cost-control-for-external-applications",level:3},{value:"Example",id:"example",level:5}];function h(e){const t={a:"a",blockquote:"blockquote",code:"code",h1:"h1",h2:"h2",h3:"h3",h5:"h5",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.h1,{id:"roles-and-access-control-for-api-keys",children:"Roles and Access Control for API Keys"}),"\n",(0,n.jsx)(t.h2,{id:"api-keys",children:"API Keys"}),"\n",(0,n.jsxs)(t.p,{children:["API keys can be used not only for ",(0,n.jsx)(t.a,{href:"/Auth/programmatic-auth",children:"authentication"}),", but also to manage access to system resources and apply restrictions on such access."]}),"\n",(0,n.jsxs)(t.p,{children:["This is done via assigning of ",(0,n.jsx)(t.strong,{children:"roles"})," to API keys. Roles must be associated with specific system resources such as models, applications, addons and assistants."]}),"\n",(0,n.jsx)(t.p,{children:"To create and configure access control for API keys:"}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/Auth/programmatic-auth#step-1-define-api-keys",children:"Create API Key"})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.a,{href:"/Auth/programmatic-auth#step-2-assign-roles",children:"Assign role(s)"})}),"\n"]}),"\n",(0,n.jsxs)(t.li,{children:["\n",(0,n.jsx)(t.p,{children:"Add restrictions:"}),"\n",(0,n.jsxs)(t.p,{children:["Roles used by API keys must be declared in the ",(0,n.jsx)(t.code,{children:"roles"})," section. In the following example, we assign the ",(0,n.jsx)(t.code,{children:"basic"})," role for ",(0,n.jsx)(t.code,{children:"projectKey1"})," API key. It grants access to the ",(0,n.jsx)(t.code,{children:"chat-gpt-35-turbo"})," model with some restrictions:"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-Json",children:'//Example extract from aidial.config.json\n"keys": {\n    "proxyKey1": { //API key\n        "project": "Project1",\n        "role": "basic" // the name of the role\n    }\n},\n"roles": {\n    "basic": { // the name of the role\n        "limits": {\n            "chat-gpt-35-turbo": {\n            "minute": "100000", //number of tokens per minute\n            "day": "10000000", //number of tokens per day\n            "week": "10000000", //number of tokens per week\n            "month": "10000000", //number of tokens per month\n            }\n        }\n    }\n}\n'})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["In ",(0,n.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"settings"}),", you can get familiar with the description of the configuration parameters. Refer to ",(0,n.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core/blob/development/sample/aidial.config.json",children:"configuration file"})," to view the full example."]}),"\n"]}),"\n"]}),"\n"]}),"\n",(0,n.jsx)(t.h2,{id:"per-request-keys",children:"Per-Request Keys"}),"\n",(0,n.jsx)(t.p,{children:"Per-request keys are used to manage access to user files for applications, enable open telemetry for tracing and realize cost control in a lifespan of a particular request. They also play a key role for external applications accessing language models and applications deployed in AI DIAL."}),"\n",(0,n.jsx)(t.p,{children:"Per-request keys are generated by AI DIAL Core, when it is making a request to the application and is valid only during the lifetime of this particular request from the Core to the application."}),"\n",(0,n.jsx)(t.h3,{id:"how-it-works",children:"How It Works"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsxs)(t.li,{children:["Let's consider that AI DIAL Core can receive an initial request from AI DIAL Chat or any of its clients. Such request we will call ",(0,n.jsx)(t.strong,{children:"root"})," requests. Example: ",(0,n.jsx)(t.code,{children:"AI DIAL Chat --\x3e AI DIAL Core"})]}),"\n",(0,n.jsxs)(t.li,{children:["AI DIAL Core can perform a series of requests to realize the initial request - let's call them ",(0,n.jsx)(t.strong,{children:"non-root"})," requests. Example: ",(0,n.jsx)(t.code,{children:"AI DIAL Chat --\x3e AI DIAL Core --\x3e Application A --\x3e AI DIAL Core --\x3e Application B..."})]}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Root Request"}),":"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["AI DIAL Core checks that the caller (chat user or application) has enough permissions and limits (based on the ",(0,n.jsx)(t.a,{href:"#api-keys",children:"configuration"}),") to perform the request and generates a new per-request key specifically for this request."]}),"\n",(0,n.jsxs)(t.li,{children:["AI DIAL Core stores an additional data associated with the per-request key either in memory or in Redis. The data may include but is not limited to: JWT of the user or API key of the application, ",(0,n.jsx)(t.code,{children:"trace-id"}),", ",(0,n.jsx)(t.code,{children:"core-parent-span-id"}),", list of the user files attached to the request."]}),"\n",(0,n.jsx)(t.li,{children:"AI DIAL Core passes the per-request key to the application or model adapter in the API-key header. The application or model adapter then send the per-request key back to AI DIAL Core using the same API-key header for model requests or file storage API requests."}),"\n",(0,n.jsx)(t.li,{children:"AI DIAL Core invalidates the per-request key when the request is completed."}),"\n"]}),"\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Non-root Requests"}),":"]}),"\n",(0,n.jsxs)(t.ol,{children:["\n",(0,n.jsxs)(t.li,{children:["For all non-root requests, AI DIAL Core checks, that the ",(0,n.jsx)(t.strong,{children:"incoming"})," per-request key is valid and known (the one from the root request)."]}),"\n",(0,n.jsxs)(t.li,{children:["It checks the permissions of the caller and then generates and saves a new ",(0,n.jsx)(t.strong,{children:"outgoing"})," per-request key. This key is also associated with specific data: all data from the root request (its parent request) and the necessary data for the current request."]}),"\n",(0,n.jsx)(t.li,{children:"AI DIAL Core passes this new outgoing per-request key in the request header. The application or model adapter then send the per-request key back to AI DIAL Core using the same API-key header for model requests or file storage API requests."}),"\n",(0,n.jsx)(t.li,{children:"AI DIAL Core invalidates the outgoing per-request key when the request is completed."}),"\n"]}),"\n",(0,n.jsx)(t.h3,{id:"calculating-costs--limits",children:"Calculating Costs & Limits"}),"\n",(0,n.jsx)(t.p,{children:"Per-request keys can be used to attribute costs and limits incurred by a request to a model to the user or application that initiated the request."}),"\n",(0,n.jsxs)(t.p,{children:["To attribute costs and limits to the request originator, ",(0,n.jsx)(t.code,{children:"traceparent"})," should be included in the request header. ",(0,n.jsx)(t.code,{children:"trace-id"})," is saved throughout the lifespan of the request in memory or in Redis."]}),"\n",(0,n.jsx)(t.h3,{id:"gathering-statistics",children:"Gathering Statistics"}),"\n",(0,n.jsxs)(t.p,{children:["For calculating statistics, AI DIAL Core uses ",(0,n.jsx)(t.code,{children:"trace-id"})," and ",(0,n.jsx)(t.code,{children:"core-parent-span-id"})," that are stored in the additional data linked to the per-request key."]}),"\n",(0,n.jsx)(t.h3,{id:"files-sharing",children:"Files Sharing"}),"\n",(0,n.jsx)(t.p,{children:"Initially, AI DIAL Core verifies the permissions and limits of the request originator using the JWT or API Key associated with the initial request. It then generates a per-request key and links specific user files to it. Throughout the duration of the per-request key and across the entire call stack, AI DIAL Core uses this associated data to determine access rights for the application. If the application attempts to share a file which is not in the list of files associated with the per-request key or directly accessible to this application, the request results in 403 Forbidden error."}),"\n",(0,n.jsx)(t.p,{children:"To share the output files with the user, AI DIAL Core grants a full access to the authorized application to a specific output folder in the user's bucket."}),"\n",(0,n.jsxs)(t.p,{children:["To provide the path of the folder for output files, we add ",(0,n.jsx)(t.code,{children:"appdata"})," field to the response for the ",(0,n.jsx)(t.a,{href:"https://epam-rail.com/dial_api#tag/Files/paths/~1v1~1bucket/get",children:"GET /v1/bucket"}),". If this request is made with a per-request key the response will contain ",(0,n.jsx)(t.code,{children:"appdata"})," with the path to the shared folder, including the user's bucket and the correct ",(0,n.jsx)(t.code,{children:"deployment-id"})," for the application as registered in the AI DIAL Core configs."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n  "bucket": "{application-bucket-id}",\n  "appdata": "{user-bucket-id}/appdata/{deployment-id}",\n}\n'})}),"\n",(0,n.jsx)(t.h3,{id:"telemetry-tracing",children:"Telemetry Tracing"}),"\n",(0,n.jsxs)(t.p,{children:["For tracing open telemetry, ",(0,n.jsx)(t.code,{children:"traceparent"})," should be included in the request header. The open telemetry tracing does not interfere with the limits, statistics or file sharing."]}),"\n",(0,n.jsx)(t.h3,{id:"access-and-cost-control-for-external-applications",children:"Access and Cost Control for External Applications"}),"\n",(0,n.jsxs)(t.p,{children:["Applications in AI DIAL can use ",(0,n.jsx)(t.code,{children:"routes"})," for communication through ",(0,n.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"registered in AI DIAL Core"})," endpoints, which may not necessarily adhere to the AI DIAL API. Routes, therefore, act as a bridging mechanism between the AI DIAL Core and external applications, facilitating seamless interactions."]}),"\n",(0,n.jsx)(t.p,{children:"Once a route with a designated endpoint is set up in AI DIAL Core, it allows client applications, such as AI DIAL Chat for example, to interact with this endpoint. Essentially, AI DIAL Core functions as an intermediary, handling authentication and authorization between the client and the external application linked to the route."}),"\n",(0,n.jsx)(t.p,{children:"External applications, do not have direct access to the resources within AI DIAL. Still, they might need to retrieve user data or interact with other conversational agents and language models available in AI DIAL to perform their functions."}),"\n",(0,n.jsx)(t.p,{children:(0,n.jsx)(t.strong,{children:"Per-request keys are issued for routes to enable:"})}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"Access to language models and applications"}),"\n",(0,n.jsxs)(t.li,{children:["A dedicated workspace within a BLOB store for routes, allowing them to read and write files under ",(0,n.jsx)(t.code,{children:"/Keys/<route_name>/"}),"."]}),"\n",(0,n.jsxs)(t.li,{children:["The ability to fetch user information via the ",(0,n.jsx)(t.code,{children:"/v1/user/info"})," endpoint."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"To manage access and control costs for external applications behind routes, it is possible to assign specific roles for routes."}),"\n",(0,n.jsxs)(t.p,{children:["In the following example, a route ",(0,n.jsx)(t.code,{children:"myApp"})," has a user role ",(0,n.jsx)(t.code,{children:"app_user"})," assigned to it. This means, that a user with ",(0,n.jsx)(t.code,{children:"app_user"})," role can access ",(0,n.jsx)(t.code,{children:"myApp"})," route within the defined limits ",(0,n.jsx)(t.code,{children:"requestsPerMin"}),"."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{className:"language-json",children:'{\n    "routes": {\n      "myApp": {\n        "userRoles": ["app_user"] // user must have app_user role in order to access the route\n    }\n    },\n     \n    "roles": {\n       "app_user": {\n          "limits": {\n             "myApp": {\n                "requestsPerMin": "1000", // user with the app_user role can call up to 1000 requests per min for the route myApp\n            } \n         }\n       }\n    }\n}\n'})}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:["Refer to ",(0,n.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core/blob/development/sample/aidial.config.json",children:"AI DIAL Core config"})," to see the full example."]}),"\n"]}),"\n",(0,n.jsx)(t.h5,{id:"example",children:"Example"}),"\n",(0,n.jsx)(t.p,{children:"For instance, a user of AI DIAL Chat may request an external RAG (Retrieval-Augmented Generation) application to generate a response to a prompt based on an attached file. In this scenario, AI DIAL Chat uses a designated route to interact with the external RAG application. A per-request key is specifically generated for this interaction to ensure secure and authorized communication."}),"\n",(0,n.jsxs)(t.blockquote,{children:["\n",(0,n.jsxs)(t.p,{children:[(0,n.jsx)(t.strong,{children:"Note"}),": Access to models deployed in AI DIAL and request limits are determined by the roles set up in AI DIAL Core, which are assigned to both the route and the user."]}),"\n"]}),"\n",(0,n.jsx)(t.p,{children:"The external RAG application, upon receiving the request, uses the per-request key to call a language model within AI DIAL. This model processes the attached file and generates the necessary response. Subsequently, the response is relayed back to the user in AI DIAL Chat, completing the interaction loop."})]})}function d(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(h,{...e})}):h(e)}},1151:(e,t,s)=>{s.d(t,{Z:()=>a,a:()=>o});var n=s(7294);const i={},r=n.createContext(i);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);