"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[1374],{87052:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>h,frontMatter:()=>r,metadata:()=>s,toc:()=>l});var o=n(85893),i=n(11151);const r={},a="Introduction to DIAL Technological Stack",s={id:"platform/architecture-and-concepts/stack",title:"Introduction to DIAL Technological Stack",description:"DIAL is designed to be lightweight and efficient, requiring minimal resources to run. It primarily relies on community-driven and cost-effective solutions, helping to reduce technical complexity, avoid licensing risks, and keep the total cost of ownership (TCO) as low as possible.",source:"@site/docs/platform/0.architecture-and-concepts/5.stack.md",sourceDirName:"platform/0.architecture-and-concepts",slug:"/platform/architecture-and-concepts/stack",permalink:"/platform/architecture-and-concepts/stack",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:5,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"DIAL as Application Server",permalink:"/platform/architecture-and-concepts/app-server"},next:{title:"DIAL Deployment Highlights",permalink:"/platform/deployment-intro"}},c={},l=[{value:"Components Stack",id:"components-stack",level:2},{value:"Storage",id:"storage",level:2},{value:"Deployment &amp; Observability",id:"deployment--observability",level:2},{value:"Authentication",id:"authentication",level:2}];function d(e){const t={a:"a",blockquote:"blockquote",h1:"h1",h2:"h2",li:"li",p:"p",strong:"strong",ul:"ul",...(0,i.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.h1,{id:"introduction-to-dial-technological-stack",children:"Introduction to DIAL Technological Stack"}),"\n",(0,o.jsx)(t.p,{children:"DIAL is designed to be lightweight and efficient, requiring minimal resources to run. It primarily relies on community-driven and cost-effective solutions, helping to reduce technical complexity, avoid licensing risks, and keep the total cost of ownership (TCO) as low as possible."}),"\n",(0,o.jsxs)(t.blockquote,{children:["\n",(0,o.jsxs)(t.p,{children:["Refer to the ",(0,o.jsx)(t.a,{href:"https://github.com/epam/ai-dial/blob/main/CONTRIBUTING.md",children:"Contribution Guide"})," to learn more."]}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"components-stack",children:"Components Stack"}),"\n",(0,o.jsxs)(t.p,{children:["The ",(0,o.jsx)(t.strong,{children:"only required component"})," is ",(0,o.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core",children:"DIAL Core"}),". Refer to ",(0,o.jsx)(t.a,{href:"/platform/architecture-and-concepts/architecture",children:"Architecture"})," to explore installation options."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/epam/ai-dial-core",children:"DIAL Core"}),": Java 17, Vert.x"]}),"\n",(0,o.jsxs)(t.li,{children:[(0,o.jsx)(t.a,{href:"https://github.com/epam/ai-dial-chat",children:"DIAL Chat"}),": Next.js, TypeScript"]}),"\n",(0,o.jsxs)(t.li,{children:["Other system components such as Analytics Realtime, model adapters, interceptors, app builder and code interpreter: Python 3.11, FastAPI. Can bring additional stack. Refer to a ",(0,o.jsx)(t.a,{href:"https://dialx.ai/open-source",children:"GitHub repository"})," of each component to learn more."]}),"\n"]}),"\n",(0,o.jsx)(t.p,{children:"To maintain security and compliance, all technologies used in DIAL\u2014including Java, Python, and JavaScript libraries\u2014are continuously monitored for security vulnerabilities and licensing issues."}),"\n",(0,o.jsx)(t.h2,{id:"storage",children:"Storage"}),"\n",(0,o.jsxs)(t.p,{children:["DIAL ",(0,o.jsx)(t.strong,{children:"does not require"})," having a centralized database. To operate, ",(0,o.jsx)(t.strong,{children:"all you need"})," is Redis and a storage for system and user files."]}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsx)(t.li,{children:"DIAL is cloud-agnostic, meaning you can use a BLOB storage of your choice (e.g. AWS S3, Google Cloud Storage, Azure Blob Storage) or a file system for self-hosted deployments."}),"\n",(0,o.jsx)(t.li,{children:"Redis is used for in-memory caching with support for write-back (write-behind) caching."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"deployment--observability",children:"Deployment & Observability"}),"\n",(0,o.jsx)(t.p,{children:"DIAL is designed with flexibility in mind, allowing you to deploy it on the cloud, as a self-hosted solution, or even install it on a personal laptop."}),"\n",(0,o.jsxs)(t.ul,{children:["\n",(0,o.jsxs)(t.li,{children:["You can quickly ",(0,o.jsx)(t.a,{href:"/quick-start",children:"launch DIAL"})," using the container technology of your choice, such as Docker, Podman, or other containerization tools. Alternatively, you can deploy it through cloud marketplaces like ",(0,o.jsx)(t.a,{href:"https://aws.amazon.com/marketplace/pp/prodview-zx4u372lqvtfi?sr=0-1&ref_=beagle&applicationId=AWSMPContessa",children:"AWS"}),", ",(0,o.jsx)(t.a,{href:"https://console.cloud.google.com/marketplace/product/epam-mp-dial/epam-ai-dial?project=forward-garden-440215-u2",children:"Google Cloud"}),", and ",(0,o.jsx)(t.a,{href:"https://azuremarketplace.microsoft.com/en-us/marketplace/apps/epam-2436412.epam_dial?tab=Overview",children:"Microsoft Azure"}),"."]}),"\n",(0,o.jsxs)(t.li,{children:["For ",(0,o.jsx)(t.a,{href:"https://github.com/epam/ai-dial-helm/tree/main/charts/dial/examples/generic/simple",children:"production deployments"}),", you can use Kubernetes and Helm for orchestration and management."]}),"\n",(0,o.jsxs)(t.li,{children:["DIAL supports ",(0,o.jsx)(t.a,{href:"https://opentelemetry.io/",children:"OpenTelemetry"})," for observability, monitoring and tracing."]}),"\n",(0,o.jsx)(t.li,{children:"To manage secrets, DIAL integrates with popular secret management tools, including Azure Key Vault, HashiCorp Vault, AWS Secrets Manager, and GCP Cloud Key Management."}),"\n"]}),"\n",(0,o.jsx)(t.h2,{id:"authentication",children:"Authentication"}),"\n",(0,o.jsxs)(t.p,{children:["DIAL provides native support for ",(0,o.jsx)(t.a,{href:"https://openid.net/developers/how-connect-works/",children:"OpenID Connect"})," and ",(0,o.jsx)(t.a,{href:"https://oauth.net/2/",children:"OAuth2"})," and offers ",(0,o.jsx)(t.a,{href:"/tutorials/devops/auth-and-access-control/configure-idps/overview",children:"integration with various Identity Providers (IDP)"})," such as ",(0,o.jsx)(t.a,{href:"/tutorials/devops/auth-and-access-control/configure-idps/cognito",children:"AWS Cognito"}),", ",(0,o.jsx)(t.a,{href:"/tutorials/devops/auth-and-access-control/configure-idps/auth0",children:"Auth0"}),", ",(0,o.jsx)(t.a,{href:"/tutorials/devops/auth-and-access-control/configure-idps/google",children:"Google Identity"}),", ",(0,o.jsx)(t.a,{href:"/tutorials/devops/auth-and-access-control/configure-idps/entraID",children:"Microsoft Entra ID"}),", ",(0,o.jsx)(t.a,{href:"/tutorials/devops/auth-and-access-control/configure-idps/okta",children:"Okta"})," and others, where you can define user roles and attributes to support your custom permissions model. Additionally, you can leverage ",(0,o.jsx)(t.a,{href:"/tutorials/devops/auth-and-access-control/configure-idps/keycloak",children:"Keycloak"})," to work with even wider range of IDPs."]})]})}function h(e={}){const{wrapper:t}={...(0,i.a)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},11151:(e,t,n)=>{n.d(t,{Z:()=>s,a:()=>a});var o=n(67294);const i={},r=o.createContext(i);function a(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function s(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);