"use strict";(self.webpackChunkdial=self.webpackChunkdial||[]).push([[3998],{1558:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>i,contentTitle:()=>c,default:()=>h,frontMatter:()=>r,metadata:()=>a,toc:()=>l});var o=n(5893),t=n(1151);const r={},c="Roles and Access Control for API Keys",a={id:"Roles and Access Control/API Keys",title:"Roles and Access Control for API Keys",description:"API keys can be used not only for authentication, but also to manage access to system resources and apply restrictions on such access.",source:"@site/docs/Roles and Access Control/3.API Keys.md",sourceDirName:"Roles and Access Control",slug:"/Roles and Access Control/API Keys",permalink:"/Roles and Access Control/API Keys",draft:!1,unlisted:!1,tags:[],version:"current",sidebarPosition:3,frontMatter:{},sidebar:"CustomSideBar",previous:{title:"Overview",permalink:"/Roles and Access Control/overview"},next:{title:"Roles and Access Control for Chat Users",permalink:"/Roles and Access Control/chat-users"}},i={},l=[];function d(e){const s={a:"a",blockquote:"blockquote",code:"code",h1:"h1",li:"li",ol:"ol",p:"p",pre:"pre",strong:"strong",...(0,t.a)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.h1,{id:"roles-and-access-control-for-api-keys",children:"Roles and Access Control for API Keys"}),"\n",(0,o.jsxs)(s.p,{children:["API keys can be used not only for ",(0,o.jsx)(s.a,{href:"/Auth/programmatic-auth",children:"authentication"}),", but also to manage access to system resources and apply restrictions on such access."]}),"\n",(0,o.jsxs)(s.p,{children:["This is done via assigning of ",(0,o.jsx)(s.strong,{children:"roles"})," to API keys. Roles must be associated with specific system resources such as models, applications, addons and assistants."]}),"\n",(0,o.jsx)(s.p,{children:"To create and configure access control for API keys:"}),"\n",(0,o.jsxs)(s.ol,{children:["\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"/Auth/programmatic-auth#step-1-define-api-keys",children:"Create API Key"})}),"\n"]}),"\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsx)(s.p,{children:(0,o.jsx)(s.a,{href:"/Auth/programmatic-auth#step-2-assign-roles",children:"Assign role(s)"})}),"\n"]}),"\n",(0,o.jsxs)(s.li,{children:["\n",(0,o.jsx)(s.p,{children:"Add restrictions:"}),"\n",(0,o.jsxs)(s.p,{children:["Roles used by API keys must be declared in the ",(0,o.jsx)(s.code,{children:"roles"})," section. In the following example, we assign the ",(0,o.jsx)(s.code,{children:"basic"})," role for ",(0,o.jsx)(s.code,{children:"projectKey1"})," API key. It grants access to the ",(0,o.jsx)(s.code,{children:"chat-gpt-35-turbo"})," model with some restrictions:"]}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{className:"language-Json",children:'//Example extract from aidial.config.json\n"keys": {\n    "proxyKey1": { //API key\n        "project": "Project1",\n        "role": "basic" // the name of the role\n    }\n},\n"roles": {\n    "basic": { // the name of the role\n        "limits": {\n            "chat-gpt-35-turbo": {\n            "minute": "100000", //number of tokens per minute\n            "day": "10000000" //number of tokens per day\n            }\n        }\n    }\n}\n'})}),"\n",(0,o.jsxs)(s.blockquote,{children:["\n",(0,o.jsxs)(s.p,{children:["In ",(0,o.jsx)(s.a,{href:"https://github.com/epam/ai-dial-core?tab=readme-ov-file#dynamic-settings",children:"settings"}),", you can get familiar with the description of the configuration parameters. Refer to ",(0,o.jsx)(s.a,{href:"https://github.com/epam/ai-dial-core/blob/development/sample/aidial.config.json",children:"configuration file"})," to view the full example."]}),"\n"]}),"\n"]}),"\n"]})]})}function h(e={}){const{wrapper:s}={...(0,t.a)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},1151:(e,s,n)=>{n.d(s,{Z:()=>a,a:()=>c});var o=n(7294);const t={},r=o.createContext(t);function c(e){const s=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:c(e.components),o.createElement(r.Provider,{value:s},e.children)}}}]);